<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataExtractorWindow"
        xmlns:gmaps="clr-namespace:GMap.NET.WindowsPresentation;assembly=GMap.NET.WindowsPresentation"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="DataExtractorWindow.MainWindow"
        mc:Ignorable="d"
        Title="Commander1xx DataExtractor - Development Test" Height="850" Width="980"   
        WindowStartupLocation ="CenterScreen" 
        Icon="Resources/Icons/Mernok_Elektronik_Icon.ico" >

    <Window.Resources>
        <Style x:Key="groupheaderstyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="exp" IsExpanded="True" Background="LightGray" Foreground="Black">
                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CategoryGroupStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="CategoryGroupExpander" IsExpanded="False" Background="LightGray" Foreground="Black">
                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyWaterMarkStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="1"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                            <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Foreground="Black" FontWeight="Bold"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <RoutedUICommand x:Key="Command_Open_File" Text="Open File">
            <RoutedUICommand.InputGestures>
                <KeyGesture>CTRL+O</KeyGesture>
            </RoutedUICommand.InputGestures>
        </RoutedUICommand>
        <RoutedUICommand x:Key="Command_Close_File" Text="Close File">
            <RoutedUICommand.InputGestures>
                <KeyGesture>CTRL+W</KeyGesture>
            </RoutedUICommand.InputGestures>
        </RoutedUICommand>
        <RoutedUICommand x:Key="Command_Save_File" Text="Save File">
            <RoutedUICommand.InputGestures>
                <KeyGesture>CTRL+S</KeyGesture>
            </RoutedUICommand.InputGestures>
        </RoutedUICommand>
        <RoutedUICommand x:Key="Command_Exit_Application" Text="Exit Application">
            <RoutedUICommand.InputGestures>
                <KeyGesture>CTRL+Q</KeyGesture>
            </RoutedUICommand.InputGestures>
        </RoutedUICommand>
        <RoutedUICommand x:Key="Command_About" Text="Login">
            <RoutedUICommand.InputGestures>
                <KeyGesture>F1</KeyGesture>
            </RoutedUICommand.InputGestures>
        </RoutedUICommand>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Command_Open_File}" Executed="Button_Open_File_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource Command_Close_File}" Executed="Button_Close_File_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource Command_Save_File}" Executed="Button_Save_File_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource Command_Exit_Application}" Executed="_Exit_Application_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource Command_About}" Executed="Menu_Item_About_Click"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="162*"/>
            <RowDefinition Height="80"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <DockPanel x:Name="MenuPanel" Grid.ColumnSpan="2" Grid.Row="0">
            <Menu x:Name ="Menu_Item">
                <MenuItem Header="File" FontSize="12">
                    <MenuItem x:Name="Open_File" Header="_Open File" Command="{StaticResource Command_Open_File}"/>
                    <MenuItem x:Name="Close_File" Header="_Close File" Command="{StaticResource Command_Close_File}"/>
                    <Separator></Separator>
                    <MenuItem x:Name="Save_File" Header="_Save File" Command="{StaticResource Command_Save_File}"/>
                    <Separator></Separator>
                    <MenuItem x:Name="Exit_Application" Header="_Exit" Command="{StaticResource Command_Exit_Application}"/>
                </MenuItem>

                <MenuItem Header="Help" FontSize="12">
                    <MenuItem x:Name="_About" Header="_About Commander1xx DataExtractor"  Command="{StaticResource Command_About}"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <TabControl x:Name="TabControl_Information" Grid.Column="1" Margin="10,6,10,0" Grid.Row="2" Grid.RowSpan="5" SelectionChanged="TabControl_Information_SelectionChanged">
            <TabItem Header="Unit Information" Width="120">
                <Grid Background="#FFE5E5E5">
                    <DataGrid Name="DataGrid_Unit_Information" AutoGenerateColumns="False" Margin="0,0,0,0">
                        <DataGrid.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource groupheaderstyle}">
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <DataGridRowsPresenter />
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                            </GroupStyle>
                        </DataGrid.GroupStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Width="1*" Header="No." Binding="{Binding No}" MinWidth="60" MaxWidth="60"/>
                            <DataGridTextColumn Width="4*" Header="Name" Binding="{Binding Name}" MinWidth="100" MaxWidth="100"/>
                            <DataGridTextColumn Width="4*" Header="Value" Binding="{Binding Value}" MinWidth="200" MaxWidth="200" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Data Summary" Width="120">
                <Grid Background="#FFE5E5E5">
                    <DataGrid Name="DataGrid_Log_Summary" AutoGenerateColumns="False" Margin="0,0,0,0" SelectionChanged="DataGrid_Log_Summary_SelectionChanged">
                        <DataGrid.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource CategoryGroupStyle}">
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <DataGridRowsPresenter />
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                            </GroupStyle>
                        </DataGrid.GroupStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="1*" Header="Event ID" Binding="{Binding Event_ID}" MinWidth="60" MaxWidth="60"/>
                            <DataGridTextColumn Width="4*" Header="Event Name" Binding="{Binding Event_Name}" MinWidth="300" MaxWidth="300"/>
                            <DataGridTextColumn Width="1*" Header="Total" Binding="{Binding Event_Count}" MinWidth="80" MaxWidth="80" />
                        </DataGrid.Columns>

                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Data" Width="120">
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="180"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="180"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <DataGrid x:Name="DataGrid_Log" Grid.Row="0" AutoGenerateColumns="False" IsReadOnly="False" Grid.Column="1" Margin="0,0,0,0" SelectionChanged="DataGrid_Log_SelectionChanged" Grid.RowSpan="8">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="1*" Header="No." Binding="{Binding No}" MinWidth="60" MaxWidth="60"/>
                            <DataGridTextColumn Width="4*" Header="Date" Binding="{Binding DateTimeStamp, StringFormat='{}{0:dd/MM/yyyy}'}" MinWidth="80" MaxWidth="80" />
                            <DataGridTextColumn Width="4*" Header="Time" Binding="{Binding DateTimeStamp, StringFormat='{}{0:HH:mm:ss:fff}'}" MinWidth="80" MaxWidth="80" />
                            <DataGridTextColumn Width="2*" Header="Event ID" Binding="{Binding EventID}" MinWidth="60" MaxWidth="60"/>
                            <DataGridTextColumn Width="8*" Binding="{Binding EventName}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.Header>
                                    <Grid Margin="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="16"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Event Name" VerticalAlignment="Center" />
                                        <xctk:CheckComboBox x:Name="CheckComboBox_Events" HorizontalAlignment="Left" Height="28" 
                                                        MouseEnter="CheckComboBox_Events_Mouse_Enter" VerticalAlignment="Top" 
                                                        Width="16" Grid.Column="1" Background="Transparent" BorderThickness="0" 
                                                        ItemSelectionChanged="CheckComboBox_Events_ItemSelectionChanged" 
                                                        MouseLeave="CheckComboBox_Events_Mouse_Leave"
                                                         PreviewKeyDown="PreviewKeyDown_Filter_Key"
                                                        />
                                    </Grid>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="4*" Binding="{Binding RawDataDisplay}" MinWidth="220" FontFamily="Lucida Sans Typewriter" FontSize="10">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.Header>
                                    <Grid Margin="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="150"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Raw Data" VerticalAlignment="Center" />
                                        <TextBox x:Name="TextBox_RawDataFilter" 
                                             Grid.Column="1" Height="25" 
                                             Text="$$-$$-$$-$$-$$-$$-$$-$$" 
                                             Style="{StaticResource MyWaterMarkStyle}" 
                                             Tag="$$-$$-$$-$$-$$-$$-$$-$$" 
                                             Cursor="IBeam" 
                                             KeyDown="TextBox_KeyDown_Auto_Hypen"
                                             MaxLength="24"                                              
                                             TextChanged="TextBox_RawDataFilter_TextChanged" 
                                             PreviewTextInput="OnPreviewTextInput"   
                                             PreviewKeyDown="TextBox_RawDataFilter_PreviewKeyDown"
                                             FontFamily="Lucida Sans Typewriter"
                                             FontSize="10"
                                             />
                                    </Grid>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <!--<DataGridTextColumn Width="2*" Header="UID" Binding="{Binding UID}"/>
                        <DataGridTextColumn Width="2*" Header="VID" Binding="{Binding VID}"/>-->
                            <DataGridTextColumn Width="10*" Binding="{Binding EventInformation}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.Header>
                                    <Grid Margin="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Event Information" VerticalAlignment="Center" />
                                        <TextBox x:Name="TextBox_EventInformationFilter" 
                                             Height="25"
                                             Grid.Column="1" 
                                             Style="{StaticResource MyWaterMarkStyle}" 
                                             Tag="Search"
                                             Cursor="IBeam"
                                              PreviewKeyDown="PreviewKeyDown_Filter_Key" 
                                             CaretBrush="Red" 
                                             />
                                    </Grid>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="Button_Filter" Content="Apply Filter" HorizontalAlignment="Center" Width="170" Click="Button_Filter_Click" Height="20" Margin="15,0,15,40" VerticalAlignment="Bottom" IsEnabled="False" Grid.Row="7" />
                    <Button x:Name="Button_Filter_Clear" Content="Clear Filter" HorizontalAlignment="Center" Width="170" Click="Button_Filter_Clear_Click" Height="20" Margin="15,0,15,10" VerticalAlignment="Bottom"  IsEnabled="False" Grid.Row="7"/>
                    <xctk:TimePicker x:Name="TimePicker_End_Time" HorizontalAlignment="Center" Height="26" Width="175" VerticalAlignment="Center" Value="11:59:59 PM" IsEnabled="False" Cursor="Hand"  PreviewKeyDown="PreviewKeyDown_Filter_Key" Grid.Row="3" Grid.Column="0" Margin="12,7"/>
                    <Calendar x:Name="Calender_End_Date" Height="170" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False" FirstDayOfWeek="Monday" Cursor="Hand"  PreviewKeyDown="PreviewKeyDown_Filter_Key" Grid.Row="5" Grid.Column="0" Margin="10,5"/>
                    <xctk:TimePicker x:Name="TimePicker_Start_Time" HorizontalAlignment="Center" Height="26" Width="175" VerticalAlignment="Center" Value="12:00:00 AM" IsEnabled="False" Cursor="Hand"  PreviewKeyDown="PreviewKeyDown_Filter_Key" Grid.Row="6" Grid.Column="0"/>
                    <Label Content="End Date and Time: " VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" FontWeight="Bold" FontSize="14" Grid.Column="0" Grid.Row="4" Margin="20,5"/>
                    <Calendar x:Name="Calender_Start_Date" Height="170" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False" FirstDayOfWeek="Monday" Cursor="Hand" PreviewKeyDown="PreviewKeyDown_Filter_Key" Grid.Row="2" Grid.Column="0" Margin="10,5"/>
                    <Label Content="Start Date and Time:" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" FontWeight="Bold" FontSize="14" Grid.Row="1" Grid.Column="0" Margin="18,5" />
                    <Label Content="Filter Control" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" FontWeight="Bold" FontSize="18" Grid.Row="0" Grid.Column="0"/>                
                </Grid>
            </TabItem>
            <TabItem Header="Map" Width="120">
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>

                    </Grid.RowDefinitions>
                    <gmaps:GMapControl x:Name="MainMap" Grid.Row="0" Grid.Column="1"  Grid.RowSpan ="5" Grid.ColumnSpan ="3"  Loaded="mapView_Loaded" Margin="0,0,0,0"/>
                    <Button x:Name="Button_MapThreat" Grid.Row="0" Grid.Column="0" Content="Map Proximity Detection" Width="140" Click="Button_Map_Threat_Click" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="True" />
                    <Button x:Name="Button_MapPopUp" Grid.Row="1" Grid.Column="0" Content="Show Tags" Width="140" Click="Button_Map_Clear_Click" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="True" />
                    <Button x:Name="Button_MapSave" Grid.Row="3" Grid.Column="0" Content="Print Map" Width="140" Click="Button_Map_Clear_Click" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="True"/>
                    <Button x:Name="Button_MapClear" Grid.Row="4" Grid.Column="0" Content="Clear Map" Width="140" Click="Button_Map_Clear_Click" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="True"/>
                </Grid>
            </TabItem>

            <TabItem x:Name="TabItemProximityZone" Header="Proximity Zone" Width="120">

                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="107*"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>

                    <DataGrid x:Name="DataGridProximityZone" Grid.Row="0" ItemsSource="{Binding Source=ProximityZoneInfoList, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"  AutoGenerateColumns="False" Margin="0,-1,0,0" SelectionChanged="DataGridProximityZone_SelectionChanged">
                        <DataGrid.Columns>

                            <DataGridTemplateColumn Header="Critical" Width="*" IsReadOnly="True" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="1*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="5*"/>

                                                <ColumnDefinition Width="4*"/>
                                                <ColumnDefinition Width="2*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Grid.Column="1" Content="Speed (km/h): "  HorizontalAlignment="Right"/>
                                            <Label Grid.Row="1" Grid.Column="1" Content="Speed (m/s)" />
                                            <Label Grid.Row="2" Grid.Column="1" Content="Brake Distance (Upper)" />
                                            <Label Grid.Row="3" Grid.Column="1" Content="Brake Distance (Lower)" />
                                            <Label Grid.Row="4" Grid.Column="1" Content="Brake Distance (Calculated)" />
                                            <Label Grid.Row="5" Grid.Column="1" Content="PDS Time" />
                                            <Label Grid.Row="6" Grid.Column="1" Content="COM Time" />
                                            <Label Grid.Row="7" Grid.Column="1" Content="OEM Time" />
                                            <Label Grid.Row="8" Grid.Column="1" Content="Reaction Distance" />
                                            <Label Grid.Row="9" Grid.Column="1" Content="Vehicle Length" />
                                            <Label Grid.Row="10" Grid.Column="1" Content="Prohibit Zone Distance" />
                                            <Label Grid.Row="11" Grid.Column="1" Content="Critical Distance" />
                                            <Label Grid.Row="12" Grid.Column="1" Content="Measured Distance" />
                                            <Label Grid.Row="13" Grid.Column="1" Content="Critical Distance Error (m)" />
                                            <Label Grid.Row="14" Grid.Column="1" Content="Critical Distance Error (%)" />

                                            <TextBox Grid.Row="0" Grid.Column="2"  Text="{Binding CrticicalZone.SpeedKMH, Mode=TwoWay,  UpdateSourceTrigger=LostFocus, StringFormat={}{0:#.##}}" 
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />


                                            <Label Grid.Row="1" Grid.Column="2" Content="{Binding CrticicalZone.SpeedMS}"  />

                                            <Label Grid.Row="2" Grid.Column="2" Content="{Binding CrticicalZone.BrakeDistanceUpper}" />
                                            <Label Grid.Row="3" Grid.Column="2" Content="{Binding CrticicalZone.BrakeDistanceLower}"  />
                                            <Label Grid.Row="4" Grid.Column="2" Content="{Binding CrticicalZone.BrakeDistanceCalc}"  />
                                            <TextBox Grid.Row="5" Grid.Column="2" Text="{Binding CrticicalZone.PDSTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"       
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <TextBox Grid.Row="6" Grid.Column="2" Text="{Binding CrticicalZone.COMTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"        
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <TextBox Grid.Row="7" Grid.Column="2" Text="{Binding CrticicalZone.OEMTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"       
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="8" Grid.Column="2" Content="{Binding CrticicalZone.ReactionDistance}"/>

                                            <TextBox Grid.Row="9" Grid.Column="2" Text="{Binding CrticicalZone.VehicleLength, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <TextBox Grid.Row="10" Grid.Column="2" Text="{Binding CrticicalZone.ProhibitZoneDistance, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"        
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="11" Grid.Column="2" Content="{Binding CrticicalZone.CriticalDistance}" />
                                            <TextBox Grid.Row="12" Grid.Column="2" Text="{Binding CrticicalZone.MeasuredDistance, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"    
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="13" Grid.Column="2" Content="{Binding CrticicalZone.CriticalDistanceErrorM}" />
                                            <Label Grid.Row="14" Grid.Column="2" Content="{Binding CrticicalZone.CriticalDistanceErrorP}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn  Header="Warning"  Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="1*"/>

                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Grid.Column="1" Content="Speed (km/h)"/>
                                            <Label Grid.Row="1" Grid.Column="1" Content="Speed (m/s)" />
                                            <Label Grid.Row="2" Grid.Column="1" Content="Operator Time" />
                                            <Label Grid.Row="3" Grid.Column="1" Content="PDS Time" />
                                            <Label Grid.Row="4" Grid.Column="1" Content="Reaction Distance" />
                                            <Label Grid.Row="5" Grid.Column="1" Content="Warning Distance" />
                                            <Label Grid.Row="6" Grid.Column="1" Content="Measured Distance" />
                                            <Label Grid.Row="7" Grid.Column="1" Content="Warning Di;stance Error (m)" />
                                            <Label Grid.Row="8" Grid.Column="1" Content="Warning Distance Error (%)" />

                                            <TextBox Grid.Row="0" Grid.Column="2"  Text="{Binding WarningZone.SpeedKMH, Mode=TwoWay,  UpdateSourceTrigger=LostFocus, StringFormat={}{0:#.##}}" 
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />

                                            <Label Grid.Row="1" Grid.Column="2" Content="{Binding WarningZone.SpeedMS}"  />
                                            <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding WarningZone.OperatorTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"        
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding WarningZone.PDSTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"       
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="4" Grid.Column="2" Content="{Binding WarningZone.ReactionDistance}"    />
                                            <Label Grid.Row="5" Grid.Column="2" Content="{Binding WarningZone.AlertDistance}" />
                                            <TextBox Grid.Row="6" Grid.Column="2" Text="{Binding WarningZone.MeasuredDistance, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"    
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="7" Grid.Column="2" Content="{Binding WarningZone.DistanceErrorM}" />
                                            <Label Grid.Row="8" Grid.Column="2" Content="{Binding WarningZone.DistanceErrorP}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn  Header="Presence"  Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="1*"/>

                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Grid.Column="1" Content="Speed (km/h)"/>
                                            <Label Grid.Row="1" Grid.Column="1" Content="Speed (m/s)" />
                                            <Label Grid.Row="2" Grid.Column="1" Content="Operator Time" />
                                            <Label Grid.Row="3" Grid.Column="1" Content="PDS Time" />
                                            <Label Grid.Row="4" Grid.Column="1" Content="Reaction Distance" />
                                            <Label Grid.Row="5" Grid.Column="1" Content="Presence Distance" />
                                            <Label Grid.Row="6" Grid.Column="1" Content="Measured Distance" />
                                            <Label Grid.Row="7" Grid.Column="1" Content="Presence Distance Error (m)" />
                                            <Label Grid.Row="8" Grid.Column="1" Content="Presence Distance Error (%)" />

                                            <TextBox Grid.Row="0" Grid.Column="2"  Text="{Binding PresenceZone.SpeedKMH, Mode=TwoWay,  UpdateSourceTrigger=LostFocus, StringFormat={}{0:#.##}}" 
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />

                                            <Label Grid.Row="1" Grid.Column="2" Content="{Binding PresenceZone.SpeedMS}"  />
                                            <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding PresenceZone.OperatorTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"        
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding PresenceZone.PDSTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"       
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="4" Grid.Column="2" Content="{Binding PresenceZone.ReactionDistance}"    />
                                            <Label Grid.Row="5" Grid.Column="2" Content="{Binding PresenceZone.AlertDistance}" />
                                            <TextBox Grid.Row="6" Grid.Column="2" Text="{Binding PresenceZone.MeasuredDistance, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"    
                                                 PreviewTextInput="TextBox_PreviewTextInput"  
                                                 MouseDoubleClick="SelectAddress"
                                                 GotKeyboardFocus="SelectAddress"
                                                 PreviewMouseLeftButtonDown="SelectivelyIgnoreMouseButton" />
                                            <Label Grid.Row="7" Grid.Column="2" Content="{Binding PresenceZone.DistanceErrorM}" />
                                            <Label Grid.Row="8" Grid.Column="2" Content="{Binding PresenceZone.DistanceErrorP}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                    </DataGrid>
                    <Button x:Name="ButtonAddProximityZone" Grid.Row="1"  Content="Add" HorizontalAlignment="Left" Margin="23,14,0,0" VerticalAlignment="Top" Width="76" Click="ButtonClickAddRow" Height="26" RenderTransformOrigin="0.5,0.5">

                    </Button>
                    <Button x:Name="ButtonDeleteProximityZone" Grid.Row="1"  Content="Delete" HorizontalAlignment="Left" Margin="112,14,0,0" VerticalAlignment="Top" Width="76" Click="ButtonClickDeleteRow" Height="26"/>
                    <Button x:Name="ButtonOpenDialogBrakeTable" Grid.Row="1"  Content="Open" HorizontalAlignment="Left" Margin="206,14,0,0" VerticalAlignment="Top" Width="76" Height="26" Click="ButtonClickOpenBrakeTable"/>

                </Grid>
            </TabItem>

        </TabControl>
        <ProgressBar x:Name="ProgressBar_Log_Open" Grid.Column="0" Minimum="0" Maximum="100" Grid.Row="8" Margin="10,10,10,10" Grid.ColumnSpan="2"/>
        <TextBlock x:Name="ProgressBar_TextBlock" Grid.Column="0" HorizontalAlignment="Center" Grid.Row="8" Text="Progress Bar Task Text" TextAlignment="Center" FontSize="12" FontWeight="Bold" FontStyle="Italic" VerticalAlignment="Center" Height="16" Width="300"/>

        <GroupBox x:Name="GroupBox_EventDescription" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0" Grid.Row="7" Content="Bind to Event Description" BorderThickness="3" IsEnabled="False">
            <!--<GroupBox.Style TargetType="{StaticResource GroupBoxStyle}">
                
            </GroupBox.Style>-->

            <GroupBox.Header>
                <TextBlock>
                     <Span FontWeight="Bold" FontSize="14">Bind Event Name</Span>
                </TextBlock>
            </GroupBox.Header>
        </GroupBox>


    </Grid>

</Window>
    
    