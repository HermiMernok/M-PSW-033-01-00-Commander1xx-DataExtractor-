[
  {
    "Id": "1431000",
    "ThreadId": "640141",
    "Html": "I am building an application that needs a tool for rendering a geographic map, in addition the application needs the tool to provide a way for adding custom overlays.<br />\n<br />\nI found GMap.Net to be a great tool for the job.<br />\n<br />\nI found a lot of <code>WinForm</code> examples on the web which creates custom overlays, for example:<br />\n<pre><code>GMapOverlay markersOverlay = new GMapOverlay(&quot;markers&quot;);\nGMarkerGoogle marker = new GMarkerGoogle(new PointLatLng(-25.966688, 32.580528), GMarkerGoogleType.green);\nmarkersOverlay.Markers.Add(marker);\ngmap.Overlays.Add(markersOverlay);\n</code></pre>\n\nBut when I started to use the <code>WPF</code> version of GMap.Net I noticed that overlays are gone and I am forced to add markers straight to the markers collection (<code>mymap.Markers.Add(new Marker())</code>) without the ability to composite the markers in a separate overlay.<br />\n<br />\nHow do I use overlays in the Wpf version of GMap.Net?<br />\n",
    "PostedDate": "2015-06-19T00:58:35.48-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1431010",
    "ThreadId": "640141",
    "Html": "you can use marker.<strong>ZIndex</strong> as overlay indexd, and group/enable/disable markers that way<br />\n",
    "PostedDate": "2015-06-19T03:25:35.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1431146",
    "ThreadId": "640141",
    "Html": "Yes I seems to be the best solution.<br />\n<br />\nI wish there was a better solution. In order to implement overlays I have to wrap <code>MapControl</code> class and add <code>Overlays</code> collection myself which all the marker of the same ZIndex will be collected together in a same overlay collection.<br />\n",
    "PostedDate": "2015-06-19T23:42:29.397-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]