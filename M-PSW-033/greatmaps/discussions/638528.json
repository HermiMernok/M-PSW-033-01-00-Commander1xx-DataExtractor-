[
  {
    "Id": "1426912",
    "ThreadId": "638528",
    "Html": "I am creating an application for airplane navigation gps. So far I have an app where you add waypoints (name, lat,lng) and the flight path (route) would be created from the inputted waypoints. I also have an airplane bug or symbol which moves along the fight path. So the problem is that the airplane bug starts on the flight path but after few seconds, it goes off the path and moves alongside the path but not on the path. What could be the problem? What I am doing is calculating the slope and y-intercept of the given two points and then generate the longs from given lats and that's how I move it. But the formula is correct. I don't know what the prob is. Anyone? <br />\n",
    "PostedDate": "2015-05-21T11:08:53.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1427024",
    "ThreadId": "638528",
    "Html": "Hi, I am using the control for aircraft navigation as well.\r<br />\nI can give you a hand if you can explain me better what you are trying to do. It seems like you don't have the actual coordinates of the aircraft, but instead you are forcing it to stay on a path. In that case you can just try to interpolate the coordinates between two way-points. Calculating the slope is never a good idea because it has some singularities. You can better work with vectors.<br />\n",
    "PostedDate": "2015-05-22T00:28:17.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1427080",
    "ThreadId": "638528",
    "Html": "Thanks for helping Guille29. So I add waypoints to the map and a route would be generated from those waypoints. Then I add an airplane image to the first waypoint, then when I hit 'test', the plane moves along the flight path (making turns at the waypoints) all the way to the end. But the plane doesn't stay on the path. It goes off and moves on the side (you would know if you zoom in). I calculate the slope and y intercept and then I use lat as x values to come up with y values or longs.\r<br />\nThis is the code that adds waypoints and generates route and adds the bug.<br />\n<pre><code>         private void SubmitButton_Click(object sender, EventArgs e)\n        {\n          \n\n            marker = new GMarkerGoogle(new PointLatLng(double.Parse(LattextBox.Text), double.Parse(LongtextBox.Text)),\n             new Bitmap(@&quot;C:\\Users\\Vaib\\Documents\\Visual Studio 2013\\Projects\\testGmap\\testGmap\\Resources\\wpt.png&quot;));\n         \n            mo2.Markers.Add(marker);\n            gmap.Overlays.Add(mo2);\n            marker.ToolTip = new GMapToolTip(marker);\n            marker.ToolTipText = NametextBox.Text;\n            marker.ToolTipMode = MarkerTooltipMode.Always;\n\n        \n            if (start)\n            {\n                gmap.Position = new PointLatLng(marker.Position.Lat, marker.Position.Lng);\n                start = false;\n\n            }\n          \n\n\n            points.Add(new PointLatLng(marker.Position.Lat, marker.Position.Lng));\n          \n\n           \n            gr = new GMapRoute(points, &quot;route&quot;);\n            gr.Stroke = new Pen(Color.Magenta, 2);\n          \n            polyOverlay.Routes.Add(gr);\n            gmap.Overlays.Add(polyOverlay);\n\n        \n            ga = new GMarkerArrow(new PointLatLng(gr.From.Value.Lat, gr.From.Value.Lng));\n            if (points.Count &gt;= 2)\n            {\n                ga.Bearing = (float)final(gr.From.Value.Lat, gr.From.Value.Lng, points[1].Lat, points[1].Lng);\n\n                Console.WriteLine((float)final(gr.From.Value.Lat, gr.From.Value.Lng, points[1].Lat, points[1].Lng));\n            }\n         \n        \n            markersOverlay.Clear();\n            \n            markersOverlay.Markers.Add(ga);\n            gmap.Overlays.Add(markersOverlay);\n\n        }</code></pre>\n\nThis calculates the slope,yintercept and updates the bug<br />\n<pre><code>    double x , x1, y1, x2, y2;\n    double y, m, b;\n    int temp = 0;\n    private void button1_Click(object sender, EventArgs e)\n    {\n        x1 = points[temp].Lat;\n        y1 = points[temp].Lng;\n        x2 = points[temp + 1].Lat;\n        y2 = points[temp + 1].Lng;\n        x = x1;\n\n        if (x1 == x2)\n            y = y1;\n\n        timer1.Enabled = true;\n\n    }\n\n    private void timer1_Tick(object sender, EventArgs e)\n    {\n        if (x1 != x2)\n        {\n            if (x2 &lt; x1)\n                x -= move;\n            else if (x2 &gt; x1)\n                x += move;\n\n            m = (y2 - y1) / (x2 - x1);\n\n            b = y2 - (m * x2);\n            y = (m * x) + b;\n\n\n        }\n        else\n        {\n            if (y2 &lt; y1)\n                y -= move;\n            else if (y2 &gt; y1)\n                y += move;\n\n\n        }\n\n        ga.Position = new PointLatLng(x, y);\n\n        gmap.Position = new PointLatLng(x, y);\n        Console.WriteLine(x + &quot;,&quot; + y);\n\n        if (x2 &lt; x1)\n        {\n            if (x - .0001 &lt;= x2)\n            {\n                temp++;\n                if (temp &gt;= (points.Count - 1))\n                    timer1.Enabled = false;\n                else\n                {\n\n                    x1 = points[temp].Lat;\n                    y1 = points[temp].Lng;\n                    x2 = points[temp + 1].Lat;\n                    y2 = points[temp + 1].Lng;\n                    x = x1;\n                   ga.Bearing = (float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng);\n                    Console.WriteLine((float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng));\n                }\n            }\n\n\n\n        }\n        else if (x2 &gt; x1)\n        {\n\n            if (x + .0001 &gt;= x2)\n            {\n                temp++;\n                if (temp &gt;= (points.Count - 1))\n                    timer1.Enabled = false;\n                else\n                {\n\n\n                    x1 = points[temp].Lat;\n                    y1 = points[temp].Lng;\n                    x2 = points[temp + 1].Lat;\n                    y2 = points[temp + 1].Lng;\n                    x = x1;\n                    ga.Bearing = (float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng);\n                    Console.WriteLine((float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng));\n                }\n            }\n\n\n        }\n        else\n        {\n            if (y2 &lt; y1)\n            {\n                if (y - .0001 &lt;= y2)\n                {\n                    temp++;\n                    if (temp &gt;= (points.Count - 1))\n                        timer1.Enabled = false;\n                    else\n                    {\n\n\n                        x1 = points[temp].Lat;\n                        y1 = points[temp].Lng;\n                        x2 = points[temp + 1].Lat;\n                        y2 = points[temp + 1].Lng;\n                        x = x1;\n                       ga.Bearing = (float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng);\n                        Console.WriteLine((float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng));\n                    }\n                }\n            }\n            else\n            {\n                if (y + .0001 &gt;= y2)\n                {\n                    temp++;\n                    if (temp &gt;= (points.Count - 1))\n                        timer1.Enabled = false;\n                    else\n                    {\n\n\n                        x1 = points[temp].Lat;\n                        y1 = points[temp].Lng;\n                        x2 = points[temp + 1].Lat;\n                        y2 = points[temp + 1].Lng;\n                        x = x1;\n                        ga.Bearing = (float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng);\n                        Console.WriteLine((float)final(points[temp].Lat, points[temp].Lng, points[temp + 1].Lat, points[temp + 1].Lng));\n                    }\n                }\n            }\n        }</code></pre>\n\n<pre><code></code></pre>\n\nThanks for the help<br />\n",
    "PostedDate": "2015-05-22T06:00:09.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1427625",
    "ThreadId": "638528",
    "Html": "What do you mean by interpolating the coordinates between the points? Can you explain that better? What is the alternative to finding the slope? How else can I find the coordinates between two waypoints? Thanks<br />\n",
    "PostedDate": "2015-05-26T05:37:33.737-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]