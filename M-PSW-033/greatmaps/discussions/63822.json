[
  {
    "Id": "217028",
    "ThreadId": "63822",
    "Html": "<p>Hi&nbsp;radioman,</p>\r\n<p>I added the following code to support Walking Routes ( In Beta testing by Google).&nbsp; Basically clones the existing functions and sets the dirflg to &quot;w&quot;. An alternate implementation is&nbsp;to alter the existing functions (GetRouteBetweenPoints and MakeRouteURL)&nbsp;&nbsp;however existing applications would need to change.</p>\r\n<p>Keep up the good work</p>\r\n<p>Brian</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>      <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets a walking route (if supported)</span>\r\n      <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n      <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;start&quot;&gt;</span><span style=\"color:Gray\">&lt;/param&gt;</span>\r\n      <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;end&quot;&gt;</span><span style=\"color:Gray\">&lt;/param&gt;</span>\r\n      <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;Zoom&quot;&gt;</span><span style=\"color:Gray\">&lt;/param&gt;</span>\r\n      <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;returns&gt;</span><span style=\"color:Gray\">&lt;/returns&gt;</span>\r\n      <span style=\"color:Blue\">public</span> MapRoute GetWalkingRouteBetweenPoints(PointLatLng start, PointLatLng end, <span style=\"color:Blue\">int</span> Zoom)\r\n      {\r\n          <span style=\"color:Blue\">string</span> tooltip;\r\n          <span style=\"color:Blue\">int</span> numLevels;\r\n          <span style=\"color:Blue\">int</span> zoomFactor;\r\n          MapRoute ret = <span style=\"color:Blue\">null</span>;\r\n          List&lt;PointLatLng&gt; points = GetRouteBetweenPointsUrl(MakeWalkingRouteUrl(start, end, Language), Zoom, UseRouteCache, <span style=\"color:Blue\">out</span> tooltip, <span style=\"color:Blue\">out</span> numLevels, <span style=\"color:Blue\">out</span> zoomFactor);\r\n          <span style=\"color:Blue\">if</span> (points != <span style=\"color:Blue\">null</span>)\r\n          {\r\n              ret = <span style=\"color:Blue\">new</span> MapRoute(points, tooltip);\r\n          }\r\n          <span style=\"color:Blue\">return</span> ret;\r\n      }\r\n      <span style=\"color:Blue\">public</span> MapRoute GetWalkingRouteBetweenPoints(<span style=\"color:Blue\">string</span> start, <span style=\"color:Blue\">string</span> end, <span style=\"color:Blue\">int</span> Zoom)\r\n      {\r\n          <span style=\"color:Blue\">string</span> tooltip;\r\n          <span style=\"color:Blue\">int</span> numLevels;\r\n          <span style=\"color:Blue\">int</span> zoomFactor;\r\n          MapRoute ret = <span style=\"color:Blue\">null</span>;\r\n          List&lt;PointLatLng&gt; points = GetRouteBetweenPointsUrl(MakeWalkingRouteUrl(start, end, Language), Zoom, UseRouteCache, <span style=\"color:Blue\">out</span> tooltip, <span style=\"color:Blue\">out</span> numLevels, <span style=\"color:Blue\">out</span> zoomFactor);\r\n          <span style=\"color:Blue\">if</span> (points != <span style=\"color:Blue\">null</span>)\r\n          {\r\n              ret = <span style=\"color:Blue\">new</span> MapRoute(points, tooltip);\r\n          }\r\n          <span style=\"color:Blue\">return</span> ret;\r\n      }\r\n\r\n\r\n      <span style=\"color:Blue\">internal</span> <span style=\"color:Blue\">string</span> MakeWalkingRouteUrl(PointLatLng start, PointLatLng end, <span style=\"color:Blue\">string</span> language)\r\n      {\r\n\r\n          <span style=\"color:Blue\">string</span> directions = <span style=\"color:#A31515\">&quot;&amp;mra=ls&amp;dirflg=w&quot;</span>;\r\n\r\n          <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">string</span>.Format(<span style=\"color:#A31515\">&quot;http://maps.google.com/maps?f=q&amp;output=dragdir&amp;doflg=p&amp;hl={0}{1}&amp;q=&amp;saddr=@{2},{3}&amp;daddr=@{4},{5}&quot;</span>, language, directions, start.Lat.ToString(CultureInfo.InvariantCulture), start.Lng.ToString(CultureInfo.InvariantCulture), end.Lat.ToString(CultureInfo.InvariantCulture), end.Lng.ToString(CultureInfo.InvariantCulture));\r\n      }\r\n      <span style=\"color:Blue\">internal</span> <span style=\"color:Blue\">string</span> MakeWalkingRouteUrl(<span style=\"color:Blue\">string</span> start, <span style=\"color:Blue\">string</span> end, <span style=\"color:Blue\">string</span> language)\r\n      {\r\n          <span style=\"color:Blue\">string</span> directions = <span style=\"color:#A31515\">&quot;&amp;mra=ls&amp;dirflg=w&quot;</span>;\r\n          <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">string</span>.Format(<span style=\"color:#A31515\">&quot;http://maps.google.com/maps?f=q&amp;output=dragdir&amp;doflg=p&amp;hl={0}{1}&amp;q=&amp;saddr=@{2}&amp;daddr=@{3}&quot;</span>, language, directions, start.Replace(<span style=\"color:#A31515\">' '</span>, <span style=\"color:#A31515\">'+'</span>), end.Replace(<span style=\"color:#A31515\">' '</span>, <span style=\"color:#A31515\">'+'</span>));\r\n      }\r\n\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-28T19:17:05.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217047",
    "ThreadId": "63822",
    "Html": "<p>done! tkanks</p>",
    "PostedDate": "2009-07-28T21:17:13.653-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]