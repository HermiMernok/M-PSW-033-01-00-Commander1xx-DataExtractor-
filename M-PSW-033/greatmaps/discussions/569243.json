[
  {
    "Id": "1311292",
    "ThreadId": "569243",
    "Html": "Hello everyone!\r<br />\n<br />\nI am trying to create a heat map using a provider as recommended in another thread in this forum\r<br />\n<br />\n(Https://greatmaps.codeplex.com/discussions/224237)\r<br />\n<br />\nAlso try to solve the heat map using a OVERLAY instead of a PROVIDER, but is quite slow and also has problems when dragging the map (the layer out of phase)\r<br />\n<br />\nSomeone will have some solution for heat map?\r<br />\n<br />\nI pass code heat map using a OVERLAY <br />\n<pre><code>Public Class HeatMapOverlay2\n    Inherits GMap.NET.WindowsForms.GMapOverlay\n\n    Private _mapControl As GMap.NET.WindowsForms.GMapControl\n    Public Property MapControl() As GMap.NET.WindowsForms.GMapControl\n        Get\n            Return _mapControl\n        End Get\n        Set(ByVal value As GMap.NET.WindowsForms.GMapControl)\n            _mapControl = value\n        End Set\n    End Property\n\n    Private _puntos As PointManager\n    Public Property Puntos() As PointManager\n        Get\n            Return _puntos\n        End Get\n        Set(ByVal value As PointManager)\n            _puntos = value\n        End Set\n    End Property\n\n    Private proyeccion As New MercatorProjection\n\n\n    Public Sub New(ByVal nombre As String, ByVal mapControl As GMapControl, ByVal puntos As PointLatLng())\n\n        Try\n\n            Me.MapControl = mapControl\n            Me.Puntos = New GMap.NET.GHeat.PointManager()\n\n\n            For Each punto As PointLatLng In puntos\n                Me.Puntos.AddPoint(punto)\n            Next\n\n        Catch ex As Exception\n        End Try\n    End Sub\n\n    Public Overrides Sub OnRender(g As System.Drawing.Graphics)\n        MyBase.OnRender(g)\n\n        Dim pixelTopLeft As GPoint = proyeccion.FromLatLngToPixel(MapControl.ViewArea.LocationTopLeft, Integer.Parse(MapControl.Zoom))\n        Dim pixelBottomRight As GPoint = proyeccion.FromLatLngToPixel(MapControl.ViewArea.LocationRightBottom, Integer.Parse(MapControl.Zoom))\n\n        Dim startTile As GPoint = proyeccion.FromPixelToTileXY(pixelTopLeft)\n        Dim startPixel As GPoint = proyeccion.FromTileXYToPixel(startTile)\n        Dim lastTile As GPoint = proyeccion.FromPixelToTileXY(pixelBottomRight)\n\n\n        Dim mapPosition As GPoint = MapControl.PositionPixel\n\n        For x As Integer = startTile.X To lastTile.X\n            For y As Integer = startTile.Y To lastTile.Y\n\n                Dim tempImage As Bitmap = GMap.NET.GHeat.GHeat.GetTile(Puntos, &quot;classic&quot;, MapControl.Zoom, x, y, False, False, 150)\n                g.DrawImage(tempImage, New System.Drawing.PointF(x * 256 - mapPosition.X, y * 256 - mapPosition.Y))\n\n            Next\n        Next\n\n\n\n    End Sub\n\nEnd Class</code></pre>\n\n<pre><code></code></pre>\n\n",
    "PostedDate": "2014-10-07T11:18:20.35-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]