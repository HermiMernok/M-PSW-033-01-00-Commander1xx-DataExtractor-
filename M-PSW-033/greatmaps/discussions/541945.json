[
  {
    "Id": "1233118",
    "ThreadId": "541945",
    "Html": "Hi, I made a file cache provider for <a href=\"http://sasgis.org/\" rel=\"nofollow\">SASPlanet</a>. Who needs to use and modify. Although it works a little slower than DatabaseCache but I already had ready cash for several countries in the format SASPlanet.<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">/*\n * File cache from SASPlanet\n */</span>\n\n<span style=\"color:Blue;\">namespace</span> GMap.NET.CacheProviders\n{\n\n<span style=\"color:Blue;\">#if</span> SAS\n    <span style=\"color:Blue;\">using</span> System;\n    <span style=\"color:Blue;\">using</span> System.Diagnostics;\n    <span style=\"color:Blue;\">using</span> System.IO;\n    <span style=\"color:Blue;\">using</span> GMap.NET.MapProviders;\n\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> SASPureImageCache : PureImageCache\n    {\n\n        <span style=\"color:Blue;\">public</span> SASPureImageCache() \n        {\n\n        }\n\n        <span style=\"color:Blue;\">bool</span> initialized = <span style=\"color:Blue;\">false</span>;\n\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;summary&gt;</span>\n        <span style=\"color:Gray;\">///</span><span style=\"color:Green;\"> is cache initialized</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;/summary&gt;</span>\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> Initialized\n        {\n            <span style=\"color:Blue;\">get</span>\n            {\n                <span style=\"color:Blue;\">lock</span> (<span style=\"color:Blue;\">this</span>)\n                {\n                    <span style=\"color:Blue;\">return</span> initialized;\n                }\n            }\n            <span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">set</span>\n            {\n                <span style=\"color:Blue;\">lock</span> (<span style=\"color:Blue;\">this</span>)\n                {\n                    initialized = value;\n                }\n            }\n        }\n\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;summary&gt;</span>\n        <span style=\"color:Gray;\">///</span><span style=\"color:Green;\"> inits cache</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;/summary&gt;</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;returns&gt;</span><span style=\"color:Gray;\">&lt;/returns&gt;</span>\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> Initialize()\n        {\n            <span style=\"color:Blue;\">lock</span> (<span style=\"color:Blue;\">this</span>)\n            {\n                <span style=\"color:Blue;\">if</span> (!Initialized)\n                {\n                   \n                    <span style=\"color:Blue;\">try</span>\n                    {\n                        <span style=\"color:Blue;\">if</span> (!Directory.Exists(cacheFolder)) Directory.CreateDirectory(cacheFolder);\n                        Initialized = <span style=\"color:Blue;\">true</span>;\n                    }\n                    <span style=\"color:Blue;\">catch</span> (Exception ex)\n                    {\n                        <span style=\"color:Blue;\">this</span>.initialized = <span style=\"color:Blue;\">false</span>;\n                        Debug.WriteLine(ex.Message);\n                    }\n                    \n                }\n                <span style=\"color:Blue;\">return</span> Initialized;\n            }\n        }\n\n        <span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">static</span> <span style=\"color:Blue;\">string</span>[] cachePrefix = <span style=\"color:Blue;\">new</span> <span style=\"color:Blue;\">string</span>[] { <span style=\"color:#A31515;\">&quot;sat&quot;</span>, <span style=\"color:#A31515;\">&quot;yasat&quot;</span>, <span style=\"color:#A31515;\">&quot;map&quot;</span>, <span style=\"color:#A31515;\">&quot;yamapng&quot;</span>, <span style=\"color:#A31515;\">&quot;Both&quot;</span>, <span style=\"color:#A31515;\">&quot;yahyb&quot;</span>, <span style=\"color:#A31515;\">&quot;visicom_world_ru&quot;</span> };\n        <span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">static</span> <span style=\"color:Blue;\">string</span>[] cacheExt = <span style=\"color:Blue;\">new</span> <span style=\"color:Blue;\">string</span>[] { <span style=\"color:#A31515;\">&quot;.jpg&quot;</span>, <span style=\"color:#A31515;\">&quot;.jpg&quot;</span>, <span style=\"color:#A31515;\">&quot;.png&quot;</span>, <span style=\"color:#A31515;\">&quot;.png&quot;</span>, <span style=\"color:#A31515;\">&quot;.png&quot;</span>, <span style=\"color:#A31515;\">&quot;.png&quot;</span>, <span style=\"color:#A31515;\">&quot;.png&quot;</span> };\n\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">enum</span> CacheType\n        {\n            Undefined = -1,\n            GoogleSat = 0,\n            YandexSat = 1,\n            GoogleMap = 2,\n            YandexMap = 3,\n            GoogleHyb = 4,\n            YandexHyb = 5,\n            VisicomUA = 6,\n        }\n\n        <span style=\"color:Blue;\">internal</span> <span style=\"color:Blue;\">string</span> cacheFolder = <span style=\"color:Blue;\">string</span>.Empty;\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> CacheFolder \n        { \n            <span style=\"color:Blue;\">get</span> \n            { \n                <span style=\"color:Blue;\">return</span> cacheFolder; \n            }\n            <span style=\"color:Blue;\">set</span> \n            {\n                cacheFolder = value;\n            }\n        }\n        <span style=\"color:Blue;\">private</span>  <span style=\"color:Blue;\">string</span> CachePath(<span style=\"color:Blue;\">long</span> x, <span style=\"color:Blue;\">long</span> y, <span style=\"color:Blue;\">int</span> z, <span style=\"color:Blue;\">int</span> type)\n        {\n            CacheType _type = ConvertCacheType(type);\n            <span style=\"color:Blue;\">if</span> (_type != CacheType.Undefined)\n                <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">string</span>.Format(<span style=\"color:#A31515;\">&quot;{0}\\\\{1}\\\\z{2}\\\\{3}\\\\x{4}\\\\{5}\\\\y{6}{7}&quot;</span>,\n                    cacheFolder, cachePrefix[(<span style=\"color:Blue;\">int</span>)_type], z+1, x / 1024, x, y / 1024, y, cacheExt[(<span style=\"color:Blue;\">int</span>)_type]);\n            <span style=\"color:Blue;\">else</span>\n                <span style=\"color:Blue;\">return</span> String.Empty;\n        }\n        <span style=\"color:Blue;\">protected</span> <span style=\"color:Blue;\">string</span> TnePath(<span style=\"color:Blue;\">long</span> x, <span style=\"color:Blue;\">long</span> y, <span style=\"color:Blue;\">int</span> z, <span style=\"color:Blue;\">int</span> type)\n        {\n            CacheType _type = ConvertCacheType(type);\n            <span style=\"color:Blue;\">if</span> (_type != CacheType.Undefined)\n            <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">string</span>.Format(<span style=\"color:#A31515;\">&quot;{0}\\\\{1}\\\\z{2}\\\\{3}\\\\x{4}\\\\{5}\\\\y{6}{7}&quot;</span>,\n                cacheFolder, cachePrefix[(<span style=\"color:Blue;\">int</span>)_type], z+1, x / 1024, x, y / 1024, y, <span style=\"color:#A31515;\">&quot;.tne&quot;</span>);\n            <span style=\"color:Blue;\">else</span>\n                <span style=\"color:Blue;\">return</span> String.Empty;\n        }\n\n        <span style=\"color:Blue;\">private</span> CacheType ConvertCacheType(<span style=\"color:Blue;\">int</span> type) \n        {\n            CacheType _type = CacheType.Undefined;\n\n            <span style=\"color:Blue;\">if</span> (type == (GoogleSatelliteMapProvider.Instance).DbId)  { _type = CacheType.GoogleSat; }\n            <span style=\"color:Blue;\">if</span> (type == (YandexSatelliteMapProvider.Instance).DbId)  { _type = CacheType.YandexSat; }\n            <span style=\"color:Blue;\">if</span> (type == (GoogleMapProvider.Instance).DbId)           { _type = CacheType.GoogleMap; }\n            <span style=\"color:Blue;\">if</span> (type == (YandexMapProvider.Instance).DbId)           { _type = CacheType.YandexMap; }\n            <span style=\"color:Blue;\">if</span> (type == (GoogleHybridMapProvider.Instance).DbId)     { _type = CacheType.GoogleHyb; }\n            <span style=\"color:Blue;\">if</span> (type == (YandexHybridMapProvider.Instance).DbId)     { _type = CacheType.YandexHyb; }\n            <span style=\"color:Green;\">//if (type == (VisicomMapProvider.Instance).DbId)          {_type = CacheType.VisicomUA; }</span>\n\n            <span style=\"color:Blue;\">return</span> _type;\n        }\n        \n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> PutImageToCache(<span style=\"color:Blue;\">byte</span>[] tile, <span style=\"color:Blue;\">int</span> type, GPoint pos, <span style=\"color:Blue;\">int</span> zoom)\n        {\n            <span style=\"color:Blue;\">bool</span> ret = <span style=\"color:Blue;\">true</span>;\n            {\n                <span style=\"color:Blue;\">if</span> (Initialize())\n                {\n                    <span style=\"color:Blue;\">try</span>\n                    {\n                        PutImageToCacheInner(CachePath(pos.X, pos.Y, zoom, type), tile);\n                    }\n                    <span style=\"color:Blue;\">catch</span> (Exception ex)\n                    {\n                        Debug.WriteLine(ex.ToString());\n                        ret = <span style=\"color:Blue;\">false</span>;\n                        \n                    }\n                }\n            }\n\n            <span style=\"color:Blue;\">return</span> ret;\n        }\n\n        <span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">void</span> PutImageToCacheInner(<span style=\"color:Blue;\">string</span> cachePath, <span style=\"color:Blue;\">byte</span>[] data)\n        {\n            <span style=\"color:Blue;\">string</span> path = cachePath.Substring(0, cachePath.LastIndexOf(&#39;\\\\&#39;));\n            <span style=\"color:Blue;\">if</span> (!Directory.Exists(path)) Directory.CreateDirectory(path);\n\n            <span style=\"color:Blue;\">if</span> (data == <span style=\"color:Blue;\">null</span>)\n            {\n                <span style=\"color:Blue;\">try</span>\n                {\n                    cachePath = cachePath.Substring(0, cachePath.Length - 4) + <span style=\"color:#A31515;\">&quot;.tne&quot;</span>;\n                    StreamWriter sw = File.CreateText(cachePath);\n                    <span style=\"color:Blue;\">string</span> w = DateTime.Now.ToString(<span style=\"color:#A31515;\">&quot;G&quot;</span>).Replace(<span style=\"color:#A31515;\">&#39;/&#39;</span>, <span style=\"color:#A31515;\">&#39;.&#39;</span>) + <span style=\"color:#A31515;\">&quot;\\r\\n&quot;</span>;\n                    sw.Write(w);\n                    sw.Close();\n                }\n                <span style=\"color:Blue;\">catch</span> (Exception ex) { Debug.WriteLine(ex.ToString()); }\n            }\n            <span style=\"color:Blue;\">else</span>\n            {\n                <span style=\"color:Blue;\">try</span>\n                {\n                    FileStream fs = <span style=\"color:Blue;\">new</span> FileStream(cachePath, FileMode.Create, FileAccess.Write);\n                    fs.Write(data, 0, data.Length);\n                    fs.Close();\n\n                    cachePath = cachePath.Substring(cachePath.Length - 4) + <span style=\"color:#A31515;\">&quot;.tne&quot;</span>;\n                    <span style=\"color:Blue;\">if</span> (File.Exists(cachePath)) File.Delete(cachePath);\n                }\n                <span style=\"color:Blue;\">catch</span> (Exception ex) { Debug.WriteLine(ex.ToString()); }\n            }\n        }\n\n        <span style=\"color:Blue;\">public</span> PureImage GetImageFromCache(<span style=\"color:Blue;\">int</span> type, GPoint pos, <span style=\"color:Blue;\">int</span> zoom)\n        {\n            PureImage ret = <span style=\"color:Blue;\">null</span>;\n            {\n                <span style=\"color:Blue;\">if</span> (Initialize())\n                {\n                    <span style=\"color:Blue;\">if</span> (!InCash(pos.X, pos.Y, zoom, type))\n                        <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">null</span>;\n                    \n                    <span style=\"color:Blue;\">try</span>\n                    {\n                       \n                            <span style=\"color:Blue;\">string</span> cachePath = CachePath(pos.X, pos.Y, zoom, type);\n                            FileStream fs = <span style=\"color:Blue;\">new</span> FileStream(cachePath, FileMode.Open, FileAccess.Read);\n                            <span style=\"color:Blue;\">byte</span>[] tile = <span style=\"color:Blue;\">new</span> <span style=\"color:Blue;\">byte</span>[fs.Length];\n                            fs.Read(tile, 0, tile.Length);\n                            fs.Close();\n                            <span style=\"color:Blue;\">if</span> (tile != <span style=\"color:Blue;\">null</span> &amp;&amp; tile.Length &gt; 0)\n                            {\n                                <span style=\"color:Blue;\">if</span> (GMapProvider.TileImageProxy != <span style=\"color:Blue;\">null</span>)\n                                {\n                                    ret = GMapProvider.TileImageProxy.FromArray(tile);\n                                }\n                            }\n                            tile = <span style=\"color:Blue;\">null</span>;\n                        \n                    }\n                    <span style=\"color:Blue;\">catch</span> (Exception ex)\n                    {\n                        Debug.WriteLine(ex.ToString());\n                        ret = <span style=\"color:Blue;\">null</span>;\n                       \n                    }\n                }\n            }\n            <span style=\"color:Blue;\">return</span> ret;\n        }\n\n        <span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">bool</span> InCash(<span style=\"color:Blue;\">long</span> x, <span style=\"color:Blue;\">long</span> y, <span style=\"color:Blue;\">int</span> z, <span style=\"color:Blue;\">int</span> type)\n        {\n            <span style=\"color:Blue;\">string</span> fn = CachePath(x, y, z, type);\n            <span style=\"color:Blue;\">if</span> (File.Exists(fn))\n            {\n                <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">true</span>;\n                <span style=\"color:Green;\">/*DateTime dt = File.GetLastWriteTime(fn).AddDays(30);\n                return (dt &gt; DateTime.Now);*/</span>\n            }\n            <span style=\"color:Blue;\">else</span>\n            {\n                fn = TnePath(x, y, z, type);\n                <span style=\"color:Blue;\">if</span> (File.Exists(fn))\n                {\n                    DateTime dt = File.GetLastWriteTime(fn).AddDays(30);\n                    <span style=\"color:Blue;\">return</span> (dt &gt; DateTime.Now);\n                }\n                <span style=\"color:Blue;\">else</span> <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">false</span>;\n            }\n        }\n\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;summary&gt;</span>\n        <span style=\"color:Gray;\">///</span><span style=\"color:Green;\"> NotImplemented</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;/summary&gt;</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;param name=&quot;date&quot;&gt;</span><span style=\"color:Gray;\">&lt;/param&gt;</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;param name=&quot;type&quot;&gt;</span><span style=\"color:Gray;\">&lt;/param&gt;</span>\n        <span style=\"color:Gray;\">///</span> <span style=\"color:Gray;\">&lt;returns&gt;</span><span style=\"color:Gray;\">&lt;/returns&gt;</span>\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">int</span> DeleteOlderThan(DateTime date, <span style=\"color:Blue;\">int</span>? type)\n        {\n            <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> NotImplementedException();\n        }\n\n       \n    }\n<span style=\"color:Blue;\">#endif</span>\n}\n\r\n</pre></div>",
    "PostedDate": "2014-04-11T01:33:30.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233275",
    "ThreadId": "541945",
    "Html": "thanks!<br />\n",
    "PostedDate": "2014-04-11T09:58:19.963-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]