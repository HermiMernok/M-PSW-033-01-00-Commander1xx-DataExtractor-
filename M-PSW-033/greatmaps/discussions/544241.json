[
  {
    "Id": "1241280",
    "ThreadId": "544241",
    "Html": "I need to draw an overlay that represents the range around a given point. I want it to look something like this <a href=\"http://www.freemaptools.com/radius-around-point.htm?clat=48.41989&amp;clng=-101.336341&amp;r=8080&amp;lc=FFFFFF&amp;lw=1&amp;fc=00FF00\" rel=\"nofollow\">image</a>, because that is an accurate representation of the range on a map. I tried using that website, outputting it as a .KML and copying the points in the kml into a List Of PointLatLngs, which I used to define my polygon, but that didn't work, and I wouldn't be able to change the centerpoint that the radius is around.\r<br />\n<br />\nSo... Is there any way to do this? Please let me know.<br />\n",
    "PostedDate": "2014-05-04T10:35:23.543-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1241419",
    "ThreadId": "544241",
    "Html": "Here's some code for a GMapMarker that scales with the map, just set the center and the diameter (in km) of the circle.<br />\n<pre><code>    using System;\n    using System.Collections.Generic;\n    using System.Text;\n    using System.Drawing;\n    using System.Drawing.Drawing2D;\n    using GMap.NET.WindowsForms;\n    using GMap.NET;\n\nnamespace GMapEnhanced\n    {\n        /// &lt;summary&gt;\n        /// A Circle marker that changes size on Zoom\n        /// &lt;/summary&gt;\n        public class GMapMarkerCircleScaled : GMapMarker\n        {\n            /// &lt;summary&gt;\n            /// Reference to map control to allow calculation of Size in Pixel \n            /// &lt;/summary&gt;\n            private Map map;\n\n            #region Properties\n\n            /// &lt;summary&gt;\n            /// Gets or sets a value, if the center of the Marker shall be drawn\n            /// &lt;/summary&gt;\n            public bool DrawCenter { get; set; }\n\n            /// &lt;summary&gt;\n            /// The pen for the outer circle\n            /// &lt;/summary&gt;\n            [NonSerialized]\n            public Pen CenterOuterPen = new Pen(Color.Black, 1f);\n\n            /// &lt;summary&gt;\n            /// The brush for the inner circle\n            /// &lt;/summary&gt;\n            [NonSerialized]\n            public SolidBrush CenterFillBrush = new SolidBrush(Color.Black);\n\n            /// &lt;summary&gt;\n            /// The Diameter of the Center in Pixel\n            /// &lt;/summary&gt;\n            public int CenterDiameter { get; set; }\n\n            /// &lt;summary&gt;\n            /// The pen for the outer circle\n            /// &lt;/summary&gt;\n            [NonSerialized]\n            public Pen OuterPen = new Pen(Color.Black, 1f);\n\n            /// &lt;summary&gt;\n            /// The brush for the inner circle\n            /// &lt;/summary&gt;\n            [NonSerialized]\n            public SolidBrush FillBrush = new SolidBrush(Color.White);\n\n\n            private int diamInPixel = 0;\n\n            private double diameterInKM = 10;\n            /// &lt;summary&gt;\n            /// The size of the circle in km\n            /// &lt;/summary&gt;\n            public double CircleDiameter\n            {\n                get\n                {\n                    return this.diameterInKM;\n                }\n                set\n                {\n                    diameterInKM = value;\n                    SetDiameterInKM();\n                }\n            }\n\n            /// &lt;summary&gt;\n            /// Gets the resolution of the current MapProvider and calculates the correct Size of the marker\n            /// &lt;/summary&gt;\n            private void SetDiameterInKM()\n            {\n                if (map == null)\n                    return;\n                double resolution = map.MapProvider.Projection.GetGroundResolution((int)map.Zoom, map.Position.Lat) / 1000d;\n                diamInPixel = (int)(diameterInKM / resolution);\n                this.Size = new System.Drawing.Size(diamInPixel, diamInPixel);\n                Offset = new System.Drawing.Point(-Size.Width / 2, -Size.Height / 2);\n                map.UpdateMarkerLocalPosition(this);\n            }\n\n            /// &lt;summary&gt;\n            /// Gets the size in Pixel of this marker\n            /// &lt;/summary&gt;\n            public new Size Size\n            {\n                get\n                {\n                    return area.Size;\n                }\n                private set\n                {\n                    area.Size = value;\n                }\n            }\n\n            #endregion\n\n\n            /// &lt;summary&gt;\n            /// Constructor\n            /// &lt;/summary&gt;\n            /// &lt;param name=&quot;p&quot;&gt;Position (Lat/Lng)&lt;/param&gt;\n            /// &lt;param name=&quot;diameterInKM&quot;&gt;The diameter of the marker in KM&lt;/param&gt;\n            /// &lt;param name=&quot;_map&quot;&gt;The map control of the marker&lt;/param&gt;\n            public GMapMarkerCircleScaled(PointLatLng p, double diameterInKM, Map _map)\n                : base(p)\n            {\n                map = _map;\n                CircleDiameter = diameterInKM;\n                map.OnMapZoomChanged += new MapZoomChanged(map_OnMapZoomChanged);\n                DrawCenter = false;\n                CenterDiameter = 5;\n            }\n\n            /// &lt;summary&gt;\n            /// Set new Diameter in Pixel\n            /// &lt;/summary&gt;\n            private void map_OnMapZoomChanged()\n            {\n                SetDiameterInKM();\n            }\n\n            /// &lt;summary&gt;\n            /// Render a circle\n            /// &lt;/summary&gt;\n            /// &lt;param name=&quot;g&quot;&gt;&lt;/param&gt;\n            public override void OnRender(Graphics g)\n            {\n                g.FillEllipse(FillBrush, new Rectangle(LocalPosition.X, LocalPosition.Y, diamInPixel, diamInPixel));\n                g.DrawEllipse(OuterPen, new Rectangle(LocalPosition.X, LocalPosition.Y, diamInPixel, diamInPixel));\n\n                if (DrawCenter)\n                {\n                    var centerRect = new Rectangle(LocalPosition.X + (diamInPixel / 2) - (CenterDiameter / 2), LocalPosition.Y + (diamInPixel / 2) - (CenterDiameter / 2), CenterDiameter, CenterDiameter);\n                    g.FillEllipse(CenterFillBrush, centerRect);\n                    g.DrawEllipse(CenterOuterPen, centerRect);\n                }\n            }\n\n            bool disposed = false;\n\n            /// &lt;summary&gt;\n            /// Dispose\n            /// &lt;/summary&gt;\n            public override void Dispose()\n            {\n                if (!disposed)\n                {\n                    disposed = true;\n\n                    if (OuterPen != null)\n                    {\n                        OuterPen.Dispose();\n                        OuterPen = null;\n                    }\n\n                    if (FillBrush != null)\n                    {\n                        FillBrush.Dispose();\n                        FillBrush = null;\n                    }\n\n                    base.Dispose();\n                }\n            }\n\n        }\n    }\n\n</code></pre>\n\n",
    "PostedDate": "2014-05-05T00:35:02.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1241742",
    "ThreadId": "544241",
    "Html": "Thanks for the code! It seems to work well except for some errors I'm getting.<br />\n<br />\nFirst,<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">Private</span> map <span style=\"color:Blue;\">As</span> Map\r\n</pre></div>gives me an error -- <em>Map is not defined.</em><br />\nVS suggests 'GMaps' as an alternative... ps I'm using the beta build of GMap.Net (Build 3660acb94e16)<br />\n<br />\nEDIT: Based on the summaries, I guessed that Map means a GMapControl<br />\n<br />\n<br />\nSecond, <br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n&lt;NonSerialized&gt; _\n        <span style=\"color:Blue;\">Public</span> CenterOuterPen <span style=\"color:Blue;\">As</span> <span style=\"color:Blue;\">New</span> Pen(Color.Black, 1.0F)\r\n</pre></div>All objects that have the NonSerialized attribute give me the error -- <em>'NonSerialized' attribute will not have any effect on this member because it's containing class is not exposed as 'Serializable'</em><br />\n<br />\nEDIT: I added &lt;Serializable&gt; above the class GMapMarkerCircleScaled and the error went away<br />\n<br />\n<br />\nThird,<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">&#39;&#39;&#39; &lt;summary&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; Constructor</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;/summary&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;param name=&quot;p&quot;&gt;Position (Lat/Lng)&lt;/param&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;param name=&quot;diameterInKM&quot;&gt;The diameter of the marker in KM&lt;/param&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;param name=&quot;_map&quot;&gt;The map control of the marker&lt;/param&gt;</span>\n        <span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Sub</span> <span style=\"color:Blue;\">New</span>(p <span style=\"color:Blue;\">As</span> PointLatLng, diameterInKM <span style=\"color:Blue;\">As</span> <span style=\"color:Blue;\">Double</span>, _map <span style=\"color:Blue;\">As</span> GMapControl)\n            <span style=\"color:Blue;\">MyBase</span>.<span style=\"color:Blue;\">New</span>(p)\n            map = _map\n            CircleDiameter = diameterInKM\n            map.OnMapZoomChanged += <span style=\"color:Blue;\">New</span> MapZoomChanged(<span style=\"color:Blue;\">AddressOf</span> map_OnMapZoomChanged)\n            DrawCenter = <span style=\"color:Blue;\">False</span>\n            CenterDiameter = 5\n        <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\r\n</pre></div>I get the error -- <em>map.OnMapZoomChanged is an event and cannot be called directly. Use a 'Raise Event' statement to raise an event.</em><br />\n<br />\nEDIT: I fixed this by declaring a new Event MapZoomChanged() and then raising that event in the constructor. Then I set the Sub map_OnMapZoomChanged() to handle the new event<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">Event</span> MapZoomChanged()\n\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;summary&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; Constructor</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;/summary&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;param name=&quot;p&quot;&gt;Position (Lat/Lng)&lt;/param&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;param name=&quot;diameterInKM&quot;&gt;The diameter of the marker in KM&lt;/param&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;param name=&quot;_map&quot;&gt;The map control of the marker&lt;/param&gt;</span>\n        <span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Sub</span> <span style=\"color:Blue;\">New</span>(p <span style=\"color:Blue;\">As</span> PointLatLng, diameterInKM <span style=\"color:Blue;\">As</span> <span style=\"color:Blue;\">Double</span>, _map <span style=\"color:Blue;\">As</span> GMapControl)\n            <span style=\"color:Blue;\">MyBase</span>.<span style=\"color:Blue;\">New</span>(p)\n            map = _map\n            CircleDiameter = diameterInKM\n            <span style=\"color:Blue;\">RaiseEvent</span> MapZoomChanged()\n            DrawCenter = <span style=\"color:Blue;\">False</span>\n            CenterDiameter = 5\n        <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\n\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;summary&gt;</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; Set new Diameter in Pixel</span>\n        <span style=\"color:Green;\">&#39;&#39;&#39; &lt;/summary&gt;</span>\n        <span style=\"color:Blue;\">Private</span> <span style=\"color:Blue;\">Sub</span> map_OnMapZoomChanged() <span style=\"color:Blue;\">Handles</span> <span style=\"color:Blue;\">Me</span>.MapZoomChanged\n            SetDiameterInKM()\n        <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\r\n</pre></div>.<br />\n.<br />\n.<br />\n<br />\nFinally<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Shadows</span> <span style=\"color:Blue;\">Property</span> Size() <span style=\"color:Blue;\">As</span> Size\n            <span style=\"color:Blue;\">Get</span>\n                <span style=\"color:Blue;\">Return</span> area.Size\n            <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Get</span>\n            <span style=\"color:Blue;\">Private</span> <span style=\"color:Blue;\">Set</span>(value <span style=\"color:Blue;\">As</span> Size)\n                area.Size = value\n            <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Set</span>\n        <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Property</span>\r\n</pre></div>gives me the error -- <em>area is not declared. It may be inaccessible due to its protection level</em><br />\n<br />\nForgive me for my ignorance, I'm still pretty new to programming<br />\n",
    "PostedDate": "2014-05-05T12:48:29.293-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1241761",
    "ThreadId": "544241",
    "Html": "I solved all of the other errors, but one persists. I am posting it here for legibility.\r<br />\n<br />\nthe code:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Shadows</span> <span style=\"color:Blue;\">Property</span> Size() <span style=\"color:Blue;\">As</span> Size\n            <span style=\"color:Blue;\">Get</span>\n                <span style=\"color:Blue;\">Return</span> area.Size\n            <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Get</span>\n            <span style=\"color:Blue;\">Private</span> <span style=\"color:Blue;\">Set</span>(value <span style=\"color:Blue;\">As</span> Size)\n                area.Size = value\n            <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Set</span>\n        <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Property</span>\r\n</pre></div>Or in C#<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">new</span> Size Size\n            {\n                <span style=\"color:Blue;\">get</span>\n                {\n                    <span style=\"color:Blue;\">return</span> area.Size;\n                }\n                <span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">set</span>\n                {\n                    area.Size = value;\n                }\n            }\r\n</pre></div>gives me the error -- <em>area is not declared. It may be inaccessible due to its protection level</em>\r<br />\n<br />\nSo, what I need to know is what <strong>area</strong> is and where I can find/define it.<br />\n",
    "PostedDate": "2014-05-05T13:46:08.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1262668",
    "ThreadId": "544241",
    "Html": "Here is a Circle Marker with the circle diameter set in meters. I posted this code here some years back.\r<br />\n<br />\nCheers.<br />\n<pre><code>namespace GMap.NET.WindowsForms.Markers\n{\n\n    public class GMapMarkerCircle : GMapMarker\n    {\n        public int Radius;\n        public Pen OutlinePen;\n        public Brush FillBrush;\n        public bool Fill;\n\n        public GMapMarkerCircle(PointLatLng p)\n            : base(p)\n        {\n            OutlinePen = new Pen(Brushes.Orange, 2);\n            FillBrush = new SolidBrush(Color.FromArgb(60, Color.Orange));\n            Radius = 0;\n        }\n\n        public override void OnRender(Graphics g)\n        {\n            g.SmoothingMode = SmoothingMode.AntiAlias;\n            \n            int R = (int)((Radius) / Overlay.Control.Core.Projection.GetGroundResolution(Overlay.Control.Zoom, Position.Lat)) * 2;\n            \n            if (Fill == true)\n            {\n               g.FillEllipse(FillBrush, new System.Drawing.Rectangle(LocalPosition.X - R / 2, LocalPosition.Y - R / 2, R, R));\n            }\n            g.DrawEllipse(OutlinePen, new System.Drawing.Rectangle(LocalPosition.X - R / 2, LocalPosition.Y - R / 2, R, R));\n        }\n    }\n}\n</code></pre>\n\n",
    "PostedDate": "2014-07-04T00:03:54.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1490393",
    "ThreadId": "544241",
    "Html": "Hello Azlan\r<br />\n<br />\nThanks for your post. I was looking for this for a while.\r<br />\nSimple and full working... It's exactly what I need.\r<br />\n<br />\nBest regards!<br />\n",
    "PostedDate": "2016-12-29T02:33:41.753-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]