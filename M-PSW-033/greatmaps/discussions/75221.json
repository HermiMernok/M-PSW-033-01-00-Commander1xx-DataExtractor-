[
  {
    "Id": "257387",
    "ThreadId": "75221",
    "Html": "<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>Three ideas to improve (if it is even still possible:-)) GMAP.net</p>\r\n<p>1/ To be able to change route thickness.</p>\r\n<p>2/ To be able to draw the map in grayscale : this is very useful to make professionnal looking presentation in transport modelling (the field I work in). We usually draw the map in grayscale to be able to see the routes and other colorful objects clearer.</p>\r\n<p>3/ Round the route caps</p>\r\n<p>Three ideas (that works) to do so. I have used them in a quick and dirty way. Maybe you could workout something to fit them in the project.</p>\r\n<p>1/ Add a property <em>public int Thickness; in </em>GMapRoute and an alter the DrawRoutes as so :</p>\r\n<p>protected virtual void DrawRoutes(Graphics g)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GraphicsState st = g.Save();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.SmoothingMode = SmoothingMode.AntiAlias;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach(GMapRoute r in Routes)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RoutePen.Color = r.Color;<br><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RoutePen.Width = r.Thickness;</span></p>\r\n<p><span style=\"color:#0000ff\">RoutePen.StartCap = LineCap.Round;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RoutePen.EndCap = LineCap.Round;</span></p>\r\n<p>....</p>\r\n<p>2/ in public class WindowsFormsImage : PureImage</p>\r\n<p>use somehow the MakeGrayscale function (the example shone above is quick and dirty : it works; but the image is alaways rendered in grayscale).</p>\r\n<p><em>ret = new WindowsFormsImage();<br>m = MakeGrayscale(m as Bitmap);<br>ret.Img = m;</em></p>\r\n<p>here the fucntion</p>\r\n<p><em>public static Bitmap MakeGrayscale(Bitmap original)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //create a blank bitmap the same size as original<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bitmap newBitmap = new Bitmap(original.Width, original.Height);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //get a graphics object from the new image<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Graphics g = Graphics.FromImage(newBitmap);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //create the grayscale ColorMatrix<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ColorMatrix colorMatrix = new ColorMatrix(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new float[][]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new float[] {.3f, .3f, .3f, 0, 0},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new float[] {.59f, .59f, .59f, 0, 0},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new float[] {.11f, .11f, .11f, 0, 0},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new float[] {0, 0, 0, 1, 0},<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new float[] {0, 0, 0, 0, 1}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //create some image attributes<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ImageAttributes attributes = new ImageAttributes();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //set the color matrix attribute<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attributes.SetColorMatrix(colorMatrix);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //draw the original image on the new image<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //using the grayscale color matrix<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.DrawImage(original, new Rectangle(0, 0, original.Width, original.Height),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0, 0, original.Width, original.Height, GraphicsUnit.Pixel, attributes);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //dispose the Graphics object<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.Dispose();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return newBitmap;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</em></p>\r\n<p>Thanks a lot for your wondeful project.</p>\r\n<p>Cheers,</p>",
    "PostedDate": "2009-11-15T23:57:50.227-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "257532",
    "ThreadId": "75221",
    "Html": "<p>Hi Radioman, npernoud,</p>\r\n<p>This is similar like I wanted as discussed in <a title=\"this thread\" href=\"http://greatmaps.codeplex.com/Thread/View.aspx?ThreadId=54618\">this thread</a>. I was thinking about brightness, but gray is also a nice way to put the tiles more to the background.</p>\r\n<p>Maybe you can combine these thoughts.</p>\r\n<p>Now when I want a 60% brightness I do this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>MainMap.GrayScaleMode = <span style=\"color:Blue\">true</span>;\r\n                <span style=\"color:Blue\">if</span> (GMaps.Instance.ImageProxy != <span style=\"color:Blue\">null</span> &amp;&amp; GMaps.Instance.ImageProxy <span style=\"color:Blue\">is</span> WindowsFormsImageProxy)\r\n                {\r\n                    <span style=\"color:Green\">// 60 is the value</span>\r\n                    <span style=\"color:Blue\">float</span> sb = 60 / 255F;\r\n\r\n                    <span style=\"color:Blue\">float</span>[][] colorMatrixElements = {\r\n                 <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">float</span>[]{1, 0,  0, 0f, 0f},\r\n                <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">float</span>[]{0, 1,  0, 0f, 0f},\r\n                <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">float</span>[]{0,  0,  1, 0f, 0f},\r\n                <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">float</span>[]{0f, 0f, 0f, 1f, 0f},\r\n                <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">float</span>[]{sb, sb, sb, 0f, 1f}};\r\n\r\n                    System.Drawing.Imaging.ColorMatrix cm = <span style=\"color:Blue\">new</span> System.Drawing.Imaging.ColorMatrix(colorMatrixElements);\r\n                    (GMaps.Instance.ImageProxy <span style=\"color:Blue\">as</span> WindowsFormsImageProxy).ColorMatrixForGrayScale = cm;\r\n                }\r\n<br>What I suggest is to make ColorMatrixForGrayScale public.<br><br>Once again,<br>Thanks,</pre>\r\n</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-16T07:36:11.643-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]