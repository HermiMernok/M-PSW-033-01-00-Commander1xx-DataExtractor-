[
  {
    "Id": "1434655",
    "ThreadId": "641466",
    "Html": "I am adding bunch of airport markers on the map but I don't want to add all the airports at once. I only want to add the airports that would be visible in the viewarea(for performance reason). SO this is what I am doing-airports will be visible after a certain zoom level. So I add only the airports that would fit in the viewarea and others I skip. Then whenever someone drags,or zooms on the map, I remove all of the airports and add them again because the viewarea has changed. This process gets repeated whenever the map is moved. But this really slows down the performance and the map lags when dragging because the markers are constantly being removed and added.\r<br />\n<br />\nSo now this is what I am trying to do: I would add the airports that are in the viewarea but whenever someone moves the map, I only remove the airports that have been gone from the viewarea and keep the ones that would still be there. And add new ones only. \r<br />\n<br />\nSo I make a list that will hold the names of the airports that are currently displayed. \r<br />\n<br />\nSo my question is how can I remove specific marker from the map? \r<br />\nI do this: mo4.Markers.RemoveAt(displayedApts.IndexOf(p[0])) but this  doesn't remove the marker from the map. I do this:  gmap.Overlays.Remove(mo4); but this removes the entire airport overlay. \r<br />\n<br />\nThis is my entire code\r<br />\n<br />\nThanks a bunch!!!<br />\n<pre><code>List&lt;string&gt; displayedApts = new List&lt;string&gt;();\n        void mapControl_OnMapZoomChanged()\n        {  \n            string[] p;\n           \n           var lines = File.ReadAllLines(@&quot;C:\\Users\\vaib\\desktop\\testGmap(1)\\testGmap\\Resources\\apts.txt&quot;);\n           \n            if (gmap.Zoom &gt; 7&amp;&amp;APTCheckbox.Checked)\n            {\n                 gmap.HoldInvalidation = true;\n                for (int x = 0; x &lt; lines.Length; x++)\n                {\n                    p = lines.ElementAt(x).Split(',');\n                    // if ((double.Parse(p[1]) &lt; (gmap.Position.Lat + 1.24718402)) &amp;&amp; (double.Parse(p[1]) &gt; (gmap.Position.Lat - 1.24718402)) &amp;&amp; (double.Parse(p[2]) &lt; (gmap.Position.Lng + 2.65319824)) &amp;&amp; (double.Parse(p[2]) &gt; (gmap.Position.Lng - 2.65319824)))\n                    if ((double.Parse(p[1]) &lt; (gmap.Position.Lat + (gmap.ViewArea.HeightLat / 2))) &amp;&amp; (double.Parse(p[1]) &gt; (gmap.Position.Lat - (gmap.ViewArea.HeightLat / 2))) &amp;&amp; (double.Parse(p[2]) &lt; (gmap.Position.Lng + (gmap.ViewArea.WidthLng / 2))) &amp;&amp; (double.Parse(p[2]) &gt; (gmap.Position.Lng - (gmap.ViewArea.WidthLng / 2))))\n                    {\n                        if (!displayedApts.Contains(p[0]))\n                        {\n                            markerApt = new GMarkerGoogle(new PointLatLng(double.Parse(p[1]), double.Parse(p[2])),\n                                new Bitmap(@&quot;C:\\Users\\vaib\\desktop\\testGmap(1)\\testGmap\\Resources\\apt.png&quot;));\n                            markerApt.IsHitTestVisible = false;\n                           displayedApts.Add(p[0]);\n                            mo4.Markers.Add(markerApt);\n                            \n                            markerApt.ToolTip = new GMap.NET.WindowsForms.ToolTips.GMapBaloonToolTip(markerApt);\n                            // markerApt.ToolTip = new GMapToolTip(markerApt);\n                            markerApt.ToolTipText = p[0];\n                            // markerApt.ToolTipPosition = \n\n                            markerApt.ToolTipMode = MarkerTooltipMode.Always;\n\n                            c++;\n                       }\n                    }\n                   else if(displayedApts.Contains(p[0]))                   \n                    {\n                        \n                       mo4.Markers.RemoveAt(displayedApts.IndexOf(p[0]));\n                       gmap.Overlays.Remove(mo4);\n                        displayedApts.Remove(p[0]);\n                    }\n\n                }\n\n                gmap.Overlays.Add(mo4);\n                gmap.Refresh();\n            }</code></pre>\n\n",
    "PostedDate": "2015-07-16T11:33:59.107-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1434799",
    "ThreadId": "641466",
    "Html": "mo4.Markers.Remove(x);\r<br />\n<br />\n..but you may set x.IsVisible= false; instead and later restore it\r<br />\n<br />\n..also when you do a batch update use this:<br />\n<pre><code>Map.HoldInvalidation = true;\n  foreach(var m in objects.Markers)\n               {\n                  if(!flightBounds.Contains(m.Position))\n                  {\n                     m.IsVisible = false;\n                  }\n                  else\n                  {\n                     m.IsVisible = true;\n                  }\n               }\nMainMap.Refresh();</code></pre>\n\n..also check flight/transport demos<br />\n",
    "PostedDate": "2015-07-17T09:38:27.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2015-07-17T09:39:12.547-07:00"
  }
]