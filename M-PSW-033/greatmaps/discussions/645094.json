[
  {
    "Id": "1444827",
    "ThreadId": "645094",
    "Html": "Hi,\r<br />\n<br />\nI want to create a marker with a number in the center.  But don,t want to have to create 50 different bitmaps.  Is there a way I can add an overlay with text on top of the marker or have the marker contain a number\r<br />\n<br />\nthanks<br />\n",
    "PostedDate": "2015-09-17T11:39:34.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1451295",
    "ThreadId": "645094",
    "Html": "Here's a code to draw a circle marker and write a number inside it and you can change the circle shape to any other shape in the <strong>OnRender()</strong> method, hope it help you<br />\n<pre><code>Imports System\nImports System.Collections.Generic\nImports System.Text\nImports System.Drawing\nImports System.Drawing.Drawing2D\nImports System.Diagnostics\nImports GMap.NET.WindowsForms\nImports GMap.NET\n\n\n    Public Class GMapMarkerCircle\n        Inherits GMapMarker\n#Region &quot;Properties&quot;\n\n        ''' &lt;summary&gt;\n        ''' The MapControl for the circle to be drawn in\n        ''' &lt;/summary&gt;\n        Public Property MapControl() As GMapControl\n\n        ''' &lt;summary&gt;\n        ''' The pen for the outer circle\n        ''' &lt;/summary&gt;\n        Public Property OuterPen() As Pen\n\n        ''' &lt;summary&gt;\n        ''' The brush for the inner circle\n        ''' &lt;/summary&gt;\n        Public Property InnerBrush() As Brush\n\n        ''' &lt;summary&gt;\n        ''' The brush for the Text\n        ''' &lt;/summary&gt;\n        Public Property TextBrush() As Brush\n\n        ''' &lt;summary&gt;\n        ''' The font for the text\n        ''' &lt;/summary&gt;\n        Public Property TextFont() As Font\n\n        ''' &lt;summary&gt;\n        ''' The text to display inside of the marker \n        ''' &lt;/summary&gt;\n        Public Property Text() As String\n\n        Private radius As Integer = 20\n        ''' &lt;summary&gt;\n        ''' The size of the circle\n        ''' &lt;/summary&gt;\n        Public Property CircleRadius() As Integer\n            Get\n                Return Me.radius\n            End Get\n            Set(ByVal value As Integer)\n                radius = value\n                Me.Size = New Size(radius, radius)\n                Offset = New Point(-Size.Width \\ 2, -Size.Height \\ 2)\n            End Set\n        End Property\n\n\n#End Region\n\n        ''' &lt;summary&gt;\n        ''' Constructor\n        ''' &lt;/summary&gt;\n        ''' &lt;param name=&quot;outer&quot;&gt;The pen for the outer ring&lt;/param&gt;\n        ''' &lt;param name=&quot;inner&quot;&gt;The brush for the inner circle.&lt;/param&gt;\n        ''' &lt;param name=&quot;circleRadius&quot;&gt;The radius in pixel of the whole circle&lt;/param&gt;\n        ''' &lt;param name=&quot;text&quot;&gt;The text in the marker.&lt;/param&gt;\n        Public Sub New(ByVal p As PointLatLng, ByVal outer As Pen, ByVal inner As Brush, ByVal circleRadius As Integer, ByVal text As String, ByVal mapCtrl As GMapControl)\n            MyBase.New(p)\n            Me.MapControl = mapCtrl\n            Me.OuterPen = outer\n            Me.InnerBrush = inner\n            Me.CircleRadius = circleRadius\n            Me.Text = text\n            Me.TextFont = New Font(&quot;Tahoma&quot;, CInt(circleRadius \\ 2), FontStyle.Regular)\n            Me.TextBrush = Brushes.Black\n            Me.Offset = New System.Drawing.Point(-Size.Width \\ 2, -Size.Height \\ 2)\n        End Sub\n\n        ''' &lt;summary&gt;\n        ''' Constructor\n        ''' &lt;/summary&gt;\n        ''' &lt;param name=&quot;p&quot;&gt;The LatLongPoint of the marker.&lt;/param&gt;\n        ''' &lt;param name=&quot;outer&quot;&gt;The pen for the outer ring&lt;/param&gt;\n        ''' &lt;param name=&quot;inner&quot;&gt;The brush for the inner circle.&lt;/param&gt;\n        ''' &lt;param name=&quot;circleRadius&quot;&gt;The radius in pixel of the whole circle&lt;/param&gt;\n        ''' &lt;param name=&quot;textBrush&quot;&gt;The brush for the text.&lt;/param&gt;\n        Public Sub New(ByVal p As PointLatLng, ByVal outer As Pen, ByVal inner As Brush, ByVal circleRadius As Integer, ByVal text As String, ByVal textBrush As Brush, ByVal mapCtrl As GMapControl)\n            Me.New(p, outer, inner, circleRadius, text, mapCtrl)\n            Me.TextBrush = textBrush\n        End Sub\n\n        ''' &lt;summary&gt;\n        ''' Constructor\n        ''' &lt;/summary&gt;\n        ''' &lt;param name=&quot;p&quot;&gt;The LatLongPoint of the marker.&lt;/param&gt;\n        ''' &lt;param name=&quot;outer&quot;&gt;The pen for the outer ring&lt;/param&gt;\n        ''' &lt;param name=&quot;inner&quot;&gt;The brush for the inner circle.&lt;/param&gt;\n        ''' &lt;param name=&quot;circleRadius&quot;&gt;The radius in pixel of the whole circle&lt;/param&gt;\n        ''' &lt;param name=&quot;textBrush&quot;&gt;The brush for the text.&lt;/param&gt;\n        Public Sub New(ByVal p As PointLatLng, ByVal outer As Pen, ByVal inner As Brush, ByVal circleRadius As Integer, ByVal text As String, ByVal textBrush As Brush, ByVal textFont As Font, ByVal mapCtrl As GMapControl)\n            Me.New(p, outer, inner, circleRadius, text, textBrush, mapCtrl)\n            Me.TextFont = textFont\n        End Sub\n\n        ''' &lt;summary&gt;\n        ''' Render a circle\n        ''' &lt;/summary&gt;\n        ''' &lt;param name=&quot;g&quot;&gt;&lt;/param&gt;\n        Public Overrides Sub OnRender(ByVal g As Graphics)\n            g.DrawEllipse(OuterPen, New Rectangle(LocalPosition.X, LocalPosition.Y, radius, radius))\n            g.FillEllipse(InnerBrush, New Rectangle(LocalPosition.X, LocalPosition.Y, radius, radius))\n            \n\n            ' Draw Text\n            If Not String.IsNullOrEmpty(Me.Text) Then\n                Dim sizeOfString As SizeF = g.MeasureString(Me.Text, Me.TextFont)\n                Dim x As Integer = (LocalPosition.X + radius \\ 2) - CInt(sizeOfString.Width \\ 2)\n                Dim y As Integer = (LocalPosition.Y + radius \\ 2) - CInt(sizeOfString.Height \\ 2)\n                g.DrawString(Me.Text, Me.TextFont, Me.TextBrush, x, y)\n            End If\n        End Sub\n\n\n        Private Function CalculateNewDiameterForZoomLevel(ByVal point As PointLatLng, ByVal Radius As Double) As Integer\n            Dim groundResolution As Double = MapControl.MapProvider.Projection.GetGroundResolution(Convert.ToInt32(MapControl.Zoom), point.Lat)\n            Dim rad As Integer = CInt(Fix(Radius * 2 / groundResolution))\n            Return rad\n        End Function\n\n        Private Function TransformAndRotate(heading As Double, points() As PointF) As PointF()\n\n            Dim cosRot As Double = Math.Cos((heading + 90) * Math.PI / 180)\n            Dim sinRot As Double = Math.Sin((heading + 90) * Math.PI / 180)\n\n            For i = 0 To points.Length - 1\n                Dim x As Single = points(i).X\n                Dim y As Single = points(i).Y\n                points(i).X = CSng((LocalPosition.X) + (x * cosRot - y * sinRot)) 'simplified rotation and transformation matrix\n                points(i).Y = CSng((LocalPosition.Y) + (x * sinRot + y * cosRot))\n            Next\n\n            Return points\n        End Function\n\n    End Class\n</code></pre>\n\n",
    "PostedDate": "2015-11-07T22:14:42.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]