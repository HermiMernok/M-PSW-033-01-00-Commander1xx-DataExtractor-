[
  {
    "Id": "1306699",
    "ThreadId": "567989",
    "Html": "Hi\r<br />\nIm trying to use this great control with a tileserver with tiles for Denmark. Unfortunately I cannot get it to work. \r<br />\nAccording to the documentation on the tileserver it is using a projection called ETRS89, UTM zone 32, EPSG:25832 (<a href=\"http://epsg.io/25832\" rel=\"nofollow\">http://epsg.io/25832</a>), with a tilesize of 256 * 256 pixel. The server is also follows the WMTS standard OGC.\r<br />\n<br />\nThere is a tiling schema on this pdf: <a href=\"http://kortforsyningen.dk/articles/tiling44.pdf\" rel=\"nofollow\">http://kortforsyningen.dk/articles/tiling44.pdf</a>\r<br />\nThere is some google translated documentation on this site: <a href=\"https://translate.google.com/translate?sl=da&amp;tl=en&amp;js=y&amp;prev=_t&amp;hl=da&amp;ie=UTF-8&amp;u=http%3A%2F%2Fkortforsyningen.dk%2Farticles%2FTile_wmts_skaermkort.htm&amp;edit-text=\" rel=\"nofollow\">https://translate.google.com/translate?sl=da&tl=en&js=y&prev=_t&hl=da&ie=UTF-8&u=http%3A%2F%2Fkortforsyningen.dk%2Farticles%2FTile_wmts_skaermkort.htm&edit-text=</a>\r<br />\n<br />\nurlformat for the server: <a href=\"http://kortforsyningen.kms.dk/topo_skaermkort?service=WMTS&amp;request=GetTile&amp;version=1.0.0&amp;layer=dtk_skaermkort&amp;style=default&amp;tilematrixset=View1&amp;tilematrix=L{0:00}&amp;tilerow={1}&amp;tilecol={2}&amp;format=image/jpeg&amp;login=greatmaps&amp;password=greatmaps123\" rel=\"nofollow\">http://kortforsyningen.kms.dk/topo_skaermkort?service=WMTS&request=GetTile&version=1.0.0&layer=dtk_skaermkort&style=default&tilematrixset=View1&tilematrix=L{0:00}&tilerow={1}&tilecol={2}&format=image/jpeg&login=greatmaps&password=greatmaps123</a>\r<br />\n<br />\nSample:  Zoomlevel 0\r<br />\n<a href=\"http://kortforsyningen.kms.dk/topo_skaermkort?service=WMTS&amp;request=GetTile&amp;version=1.0.0&amp;layer=dtk_skaermkort&amp;style=default&amp;tilematrixset=View1&amp;tilematrix=L00&amp;tilerow=0&amp;tilecol=0&amp;format=image/jpeg&amp;login=greatmaps&amp;password=greatmaps123\" rel=\"nofollow\">http://kortforsyningen.kms.dk/topo_skaermkort?service=WMTS&request=GetTile&version=1.0.0&layer=dtk_skaermkort&style=default&tilematrixset=View1&tilematrix=L00&tilerow=0&tilecol=0&format=image/jpeg&login=greatmaps&password=greatmaps123</a>\r<br />\n<br />\nI dont know much about  geographically mathematics  and theory, and have blindly tried to edit existing mapprovider and projections unsuccessfully.\r<br />\nSo I hope somebody  can lead me in the right direction, and tell me what has to be done before I can display the map of Denmark in this control or if gmap at all compatible with this tileserver.\r<br />\n<br />\nThanks in advance:-)<br />\n",
    "PostedDate": "2014-09-20T12:07:48.917-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1308002",
    "ThreadId": "567989",
    "Html": "Im almost there, but dont understand how to place/scale the tiles to the control in the correct way. \r<br />\n Im using the project <a href=\"http://greatmaps.codeplex.com/SourceControl/network/forks/radioman/BuenosAires\" rel=\"nofollow\">Fork: radioman/BuenosAires</a>, and replacing the BuenosAiresWMSProvider and the GKBAProjection with this one:<br />\n<pre><code>/// &lt;summary&gt;\n   /// Denmark, WMTS \n   /// &lt;/summary&gt;\n   public class denmarkWMTSProvider : GMapProvider\n   {\n      public static readonly denmarkWMTSProvider Instance;\n\n\n      \n      denmarkWMTSProvider()\n      {\n         InvertedAxisY = false;\n       //  Area = RectLatLng.FromLTRB(3.32016, 58.35397, 17.55777, 53.113655);\n         MaxZoom = 11;\n         MinZoom = 0;\n      }\n\n\n\n      static denmarkWMTSProvider()\n      {\n          Instance = new denmarkWMTSProvider();\n      }\n\n      #region GMapProvider Members\n\n      readonly Guid id = new Guid(&quot;E804CEF8-41C6-41B5-BCA7-6EA5348DC555&quot;);\n      public override Guid Id\n      {\n         get\n         {\n            return id;\n         }\n      }\n\n      readonly string name = &quot;Denmark, WMTS&quot;;\n      public override string Name\n      {\n         get\n         {\n            return name;\n         }\n      }\n\n      GMapProvider[] overlays;\n      public override GMapProvider[] Overlays\n      {\n         get\n         {\n            if(overlays == null)\n            {\n               overlays = new GMapProvider[] { this };\n            }\n            return overlays;\n         }\n      }\n\n      public override PureProjection Projection\n      {\n         get\n         {\n             return ETRS89Projection.Instance;\n         }\n      }\n\n      public override PureImage GetTileImage(GPoint pos, int zoom)\n      {\n         string url = MakeTileImageUrl(pos, zoom, LanguageStr);\n\n         return GetTileImageUsingHttp(url);\n      }\n\n      #endregion\n\n      string MakeTileImageUrl(GPoint pos, int zoom, string language)\n      {\n/*      \n          var tileWorldUnits = GKBAProjection.GetPixelSize(zoom) * Projection.TileSize.Width;\n         var minX = (long)(pos.X * tileWorldUnits + GKBAProjection.Instance.OriginX);\n         var minY = (long)(pos.Y * tileWorldUnits + GKBAProjection.Instance.OriginY);\n         var maxX = (long)(minX + tileWorldUnits);\n         var maxY = (long)(minY + tileWorldUnits);\n          */\n        \n         return string.Format(UrlFormat, zoom, pos.Y, pos.X);\n      }\n\n      static readonly string UrlFormat = &quot;http://kortforsyningen.kms.dk/topo_skaermkort?service=WMTS&amp;request=GetTile&amp;version=1.0.0&amp;layer=dtk_skaermkort&amp;style=default&amp;tilematrixset=View1&amp;tilematrix=L{0:00}&amp;tilerow={1}&amp;tilecol={2}&amp;format=image/jpeg&amp;login=greatmaps&amp;password=greatmaps123&quot;;\n\n      \n   }\n\n   public class ETRS89Projection : PureProjection\n   {\n       public static readonly ETRS89Projection Instance = new ETRS89Projection();\n\n      static readonly double MinLatitude = 53.113655;\n       static readonly double MaxLatitude = 58.35397;\n\n       static readonly double MinLongitude = 3.32016;\n       static readonly double MaxLongitude = 17.55777;\n      \n        static readonly double MinX = 120000;\n        static readonly double MinY = 5900000;\n        static readonly double MaxX = 1000000;\n        static readonly double MaxY = 6500000;\n\n        public readonly double OriginX = 120000;\n        public readonly double OriginY = 5900000;\n      \n      public override RectLatLng Bounds\n      {\n         get\n         {\n            return RectLatLng.FromLTRB(MinLongitude, MaxLatitude, MaxLongitude, MinLatitude);\n\n         }\n      }\n\n      GSize tileSize = new GSize(256, 256);\n      public override GSize TileSize\n      {\n         get\n         {\n            return tileSize;\n         }\n      }\n\n      public override double Axis\n      {\n         get\n         {\n            //return 6378137;\n             return 6378137;\n             \n         }\n      }\n\n      public override double Flattening\n      {\n         get\n         {\n            //return (1.0 / 297);\n             return (1.0 / 298.257222101);\n             \n         }\n      }\n\n      public override GPoint FromLatLngToPixel(double lat, double lng, int zoom)\n      {\n         GPoint ret = GPoint.Empty;\n\n         lat = Clip(lat, MinLatitude, MaxLatitude);\n         lng = Clip(lng, MinLongitude, MaxLongitude);\n\n         double[] ll = new double[] { lng, lat };\n         double[] z = new double[1] { 1 };\n         Reproject.ReprojectPoints(ll, z, pStart, pEnd, 0, 1);\n\n         double res = rez[zoom];   \n         var s = GetTileMatrixSizePixel(zoom);\n\n          double test = Math.Floor(ll[0]);\n         ret.X = (long)Math.Floor((ll[0] - OriginX) / res);\n         ret.Y = s.Height - (long)Math.Floor((ll[1] - OriginY) / res);\n\n         return ret;\n      }\n\n      readonly ProjectionInfo pStart = KnownCoordinateSystems.Geographic.World.WGS1984;\n      readonly ProjectionInfo pEnd = ProjectionInfo.FromProj4String(&quot;+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs&quot;);\n       \n      public override PointLatLng FromPixelToLatLng(long x, long y, int zoom)\n      {\n\n         PointLatLng ret = PointLatLng.Empty;\n\n         double res = rez[zoom];   \n         var s = GetTileMatrixSizePixel(zoom);\n\n         double[] ll = new double[] { (x * res) + OriginX, ((s.Height - y) * res) + OriginY };\n         double[] z = new double[1] { 1 };\n         Reproject.ReprojectPoints(ll, z, pEnd, pStart, 0, 1);\n         \n\n         ret.Lat = Clip(ll[1], MinLatitude, MaxLatitude);\n         ret.Lng = Clip(ll[0], MinLongitude, MaxLongitude);\n\n         return ret;\n      }\n\n\n      //GetCapabilities:\n      //http://kortforsyningen.kms.dk/topo_skaermkort?request=GetCapabilities&amp;service=WMTS&amp;version=1.0.0\n      \n      static double[] rez = new double[] { 1638.40, 819.20, 409.60, 204.80, 102.40, 51.20, 25.60, 12.80, 6.40, 3.20, 1.60 ,0.80 };\n      \n\n      \n      public override double GetGroundResolution(int zoom, double latitude)\n      {\n         return rez[zoom];\n      }        \n      \n      public override GSize GetTileMatrixMinXY(int zoom)\n      {\n         double tileWorldUnits = rez[zoom] * tileSize.Width;\n\n         var firstCol = (int)Math.Floor((MinX - OriginX) / tileWorldUnits);\n         var firstRow = (int)Math.Floor((MinY - OriginY) / tileWorldUnits);\n\n         return new GSize(firstCol, firstRow);\n         \n      }\n\n      public override GSize GetTileMatrixMaxXY(int zoom)\n      {\n         double tileWorldUnits = rez[zoom] * tileSize.Width;\n\n         var lastCol = (int)Math.Ceiling((MaxX - OriginX) / tileWorldUnits);\n         var lastRow = (int)Math.Ceiling((MaxY - OriginY) / tileWorldUnits);\n\n         return new GSize(lastCol-1, lastRow-1);\n      }\n   }</code></pre>\n\n",
    "PostedDate": "2014-09-25T03:02:20.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1310263",
    "ThreadId": "567989",
    "Html": "Hi, i took some interest in getting this to work, So when i download the fork and insert your code, i get this error indicating that it cant pull the tiles:<br />\n<pre><code>GetImageFrom: System.Net.WebException: Fjernserveren returnerede en fejl: (500) Intern serverfejl.\n   ved System.Net.HttpWebRequest.GetResponse()\n   ved GMap.NET.MapProviders.GMapProvider.GetTileImageUsingHttp(String url) i d:\\Windows\\Documents and Settings\\Downloads\\greatmaps-2c5b97192449\\forks_radioman_buenosaires_2c5b97192449\\GMap.NET.Core\\GMap.NET.MapProviders\\GMapProvider.cs:linje 379\n   ved Demo.WindowsForms.denmarkWMTSProvider.GetTileImage(GPoint pos, Int32 zoom) i d:\\Windows\\Documents and Settings\\Downloads\\greatmaps-2c5b97192449\\forks_radioman_buenosaires_2c5b97192449\\Demo.WindowsForms\\Source\\Program.cs:linje 108\n   ved GMap.NET.GMaps.GetImageFrom(GMapProvider provider, GPoint pos, Int32 zoom, Exception&amp; result) i d:\\Windows\\Documents and Settings\\Downloads\\greatmaps-2c5b97192449\\forks_radioman_buenosaires_2c5b97192449\\GMap.NET.Core\\GMap.NET\\GMaps.cs:linje 692\n</code></pre>\n\nSo my question to you is, Can you check if its even donloading any tiles?<br />\n<br />\nin your custom provider, replace this to get the heights of the tiles:<br />\n<pre><code>        public override PureImage GetTileImage(GPoint pos, int zoom)\n        {\n            string url = MakeTileImageUrl(pos, zoom, LanguageStr);\n            var tmp = GetTileImageUsingHttp(url);\n\n            Bitmap img = new Bitmap(tmp.Data);\n            Console.WriteLine(&quot;H:{0}, W:{1}&quot;, img.Height, img.Width);\n\n            return tmp;\n        }</code></pre>\n\nIf you can still get the tiles, and it is somehow me, who is doing something wrong. If you want to change the size of the tiles, you can use the pureimage stream to generate a bitmap. Change the size and convert it back into pure image.<br />\n<br />\nheres how it could be done. Again, i use GetTileImage, and this code is not tested. Its from the top of my head:<br />\n<pre><code>public override PureImage GetTileImage(GPoint pos, int zoom)\n        {\n            string url = MakeTileImageUrl(pos, zoom, LanguageStr);\n            var tmp = GetTileImageUsingHttp(url); // Place tile in Temp varible.\n\n            Bitmap imgBitmap = new Bitmap(tmp.Data); // Convert the pureimage datastream to bitmap so we can work with it.\n            Console.WriteLine(&quot;H:{0}, W:{1}&quot;, imgBitmap.Height, imgBitmap.Width); // Debug - Are we getting the tile? what size is it ?\n            Bitmap result = new Bitmap(256, 256); \n\n            using (Graphics g = Graphics.FromImage(result)) // Convert the size\n            {\n                g.DrawImage(imgBitmap, 0, 0, 256, 256);\n            }\n            var editedTile = result; // The convertedTile\n\n            //Change bitmap to Pureimage\n            var stream = new MemoryStream(); // Create stream to hold the bitmap\n            editedTile.Save(stream, ImageFormat.Png); // Save the bitmap into stream\n            stream.Position = 0L;\n            PureImage pureImage = TileImageProxy.FromStream(stream); // Change Stream to Pureimg\n            pureImage.Data = stream; // place the stream into PureImage Data\n\n            return pureImage; // Return\n        }</code></pre>\n\nEdit: I realise its not the prettiest code. But iam sure you get the point of, what iam trying to do here.<br />\n",
    "PostedDate": "2014-10-03T08:46:40.753-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1310868",
    "ThreadId": "567989",
    "Html": "Hi AzWildcard\r<br />\n<br />\nThank you for taking the time to help me. I have just managed to get my provider working, before I saw your message. The reason for the tiles not downloading is that the user  credentials in the urlformat ..login=greatmaps&amp;password=greatmaps123 is a time limited, and the time has run out:-).\r<br />\n<br />\nOn <a href=\"http://download.kortforsyningen.dk/content/opret-mig-som-bruger\" rel=\"nofollow\">http://download.kortforsyningen.dk/content/opret-mig-som-bruger</a> you can create a new user for free.\r<br />\n<br />\nIf it is in your interest Here is my provider and projection class:\r<br />\n<br />\nMapprovider:<br />\n<pre><code>   /// &lt;summary&gt;\n   /// Denmark, WMTS \n   /// &lt;/summary&gt;\n   public class denmarkWMTSProvider : GMapProvider\n   {\n      public static readonly denmarkWMTSProvider Instance;\n\n      \n      denmarkWMTSProvider()\n      {\n         InvertedAxisY = false;\n         MaxZoom = 11;\n         MinZoom = 0;\n      }\n\n      static denmarkWMTSProvider()\n      {\n          Instance = new denmarkWMTSProvider();\n      }\n\n      #region GMapProvider Members\n\n      readonly Guid id = new Guid(&quot;E804CEF8-41C6-41B5-BCA7-6EA5348DC555&quot;);\n      public override Guid Id\n      {\n         get\n         {\n            return id;\n         }\n      }\n\n      readonly string name = &quot;Denmark, WMTS&quot;;\n      public override string Name\n      {\n         get\n         {\n            return name;\n         }\n      }\n\n      GMapProvider[] overlays;\n      public override GMapProvider[] Overlays\n      {\n         get\n         {\n            if(overlays == null)\n            {\n                overlays = new GMapProvider[] { this };\n            }\n            return overlays;\n         }\n      }\n\n\n      public override PureProjection Projection\n      {\n         get\n         {\n             return ETRS89Projection.Instance;\n         }\n      }\n\n      public override PureImage GetTileImage(GPoint pos, int zoom)\n      {\n         string url = MakeTileImageUrl(pos, zoom, LanguageStr);\n\n         return GetTileImageUsingHttp(url);\n      }\n\n      #endregion\n\n      string MakeTileImageUrl(GPoint pos, int zoom, string language)\n      {\n          return string.Format(UrlFormat, zoom, pos.Y, pos.X);\n      }\n\n      \n      static readonly string UrlFormat = &quot;http://kortforsyningen.kms.dk/topo_skaermkort?service=WMTS&amp;request=GetTile&amp;version=1.0.0&amp;layer=dtk_skaermkort&amp;style=default&amp;tilematrixset=View1&amp;tilematrix=L{0:00}&amp;tilerow={1}&amp;tilecol={2}&amp;format=image/jpeg&amp;login=[YOURUSERNAME]&amp;password=[YOURPASSWORD]&quot;;\n}\n</code></pre>\n\nProjection Class:<br />\n<pre><code> public class ETRS89Projection : PureProjection\n   {\n       public static readonly ETRS89Projection Instance = new ETRS89Projection();\n\n       static readonly double MinX = 120000;\n       static readonly double MinY = 5900000;\n       static readonly double MaxX = 1000000;\n       static readonly double MaxY = 6500000;\n\n       public readonly double OriginX = 120000;\n       public readonly double OriginY = 6500000;\n\n       public override RectLatLng Bounds\n       {\n           get\n           {\n               return RectLatLng.FromLTRB(MinLongitude, MaxLatitude, MaxLongitude, MinLatitude);\n\n           }\n       }\n\n       GSize tileSize = new GSize(256, 256);\n       public override GSize TileSize\n       {\n           get\n           {\n               return tileSize;\n           }\n       }\n\n       public override double Axis\n       {\n           get\n           {\n               return 6378137;\n           }\n       }\n\n       public override double Flattening\n       {\n           get\n           {\n              return (1.0 / 298.257222101);\n\n           }\n       }\n\n       public override GPoint FromLatLngToPixel(double lat, double lng, int zoom)\n       {\n           GPoint ret = GPoint.Empty;\n\n           lat = Clip(lat, MinLatitude, MaxLatitude);\n           lng = Clip(lng, MinLongitude, MaxLongitude);\n\n           double[] ll = new double[] { lng, lat };\n           double[] z = new double[1] { 1 };\n           Reproject.ReprojectPoints(ll, z, pStart, pEnd, 0, 1);\n\n           double res = rez[zoom];\n           var s = GetTileMatrixSizePixel(zoom);\n\n           double test = Math.Floor(ll[0]);\n           ret.X = (long)Math.Floor(( ll[0] - OriginX) / res);\n           ret.Y = (long)Math.Floor((OriginY - ll[1]) / res);\n\n           return ret;\n       }\n\n       readonly ProjectionInfo pStart = KnownCoordinateSystems.Geographic.World.WGS1984;\n       readonly ProjectionInfo pEnd = ProjectionInfo.FromProj4String(&quot;+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs&quot;);\n\n       public override PointLatLng FromPixelToLatLng(long x, long y, int zoom)\n       {\n\n           PointLatLng ret = PointLatLng.Empty;\n\n           double res = rez[zoom];\n           var s = GetTileMatrixSizePixel(zoom);\n\n           double xx = (x * res) + OriginX;\n           double yy = OriginY - (y * res);\n\n           double[] ll = new double[] { xx, yy };\n           \n            double[] z = new double[1] { 1 };\n           Reproject.ReprojectPoints(ll, z, pEnd, pStart, 0, 1);\n\n\n           ret.Lat = Clip(ll[1], MinLatitude, MaxLatitude);\n           ret.Lng = Clip(ll[0], MinLongitude, MaxLongitude);\n\n           return ret;\n       }\n\n\n      //GetCapabilities:\n      //http://kortforsyningen.kms.dk/topo_skaermkort?request=GetCapabilities&amp;service=WMTS&amp;version=1.0.0\n\n       static double[] rez = new double[] { 1638.40, 819.20, 409.60, 204.80, 102.40, 51.20, 25.60, 12.80, 6.40, 3.20, 1.60, 0.80 };\n      \n      public override double GetGroundResolution(int zoom, double latitude)\n      {\n         return rez[zoom];\n      }        \n      \n      public override GSize GetTileMatrixMinXY(int zoom)\n      {\n         double tileWorldUnits = rez[zoom] * tileSize.Width;\n\n         var firstCol = (int)Math.Floor((MinX - OriginX) / tileWorldUnits);\n         var firstRow = (int)Math.Floor((MinY - OriginY) / tileWorldUnits);\n\n         return new GSize(0, 0);\n         \n      }\n\n      \n     public override GSize GetTileMatrixMaxXY(int zoom)\n     {\n         int width = (int)Math.Round(Math.Pow(2, zoom + 1) * 1.5, 0) - 1;\n         int height = (int)Math.Pow(2, zoom + 1) - 1;\n\n\n         return new GSize(width, height);\n     }\n}</code></pre>\n\n",
    "PostedDate": "2014-10-06T11:28:38.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1310871",
    "ThreadId": "567989",
    "Html": "Perfect. Selv tak.<br />\n",
    "PostedDate": "2014-10-06T11:34:54.997-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]