[
  {
    "Id": "274220",
    "ThreadId": "80040",
    "Html": "<p>Hi there</p>\r\n<p>Seems to be a bug with the silverlight build when using &quot;ProjNet.Converters.WellKnownText.CoordinateSystemWktReader.Parse()&quot;. The streamtokenizer class is producing differing results for the .NET and Silverlight builds. E.g. for this input wkt string:</p>\r\n<p>string wkt = &quot;GEOGCS[\\&quot;WGS 84\\&quot;,DATUM[\\&quot;WGS_1984\\&quot;,SPHEROID[\\&quot;WGS 84\\&quot;,6378137,298.257223563,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;7030\\&quot;]],AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;6326\\&quot;]],PRIMEM[\\&quot;Greenwich\\&quot;,0,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;8901\\&quot;]],UNIT[\\&quot;degree\\&quot;,0.01745329251994328,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;9122\\&quot;]],AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;4326\\&quot;]]&quot;;</p>\r\n<p>The .NET streamtokenizer version outputs these tokens:</p>\r\n<p>&quot;GEOGCS&quot;, &quot;[&quot;,&quot;\\&quot;&quot;, &quot;WGS&quot;, &quot;84&quot;</p>\r\n<p>But the Silverlight version outputs these tokens:</p>\r\n<p>&quot;G&quot;, &quot;E&quot;, &quot;O&quot;, &quot;G&quot;, &quot;C&quot;, &quot;S&quot;, &quot;[&quot;, etc..............</p>\r\n<p>And thus generates an ArgumentException in the Parse() method. The ArgumentException is raised in the &quot;default&quot; case on the switch(){} block and reads &quot;'G' is not recognized&quot; (in the case of the above).</p>\r\n<p>I've narrowed the source of bug down to these lines:</p>\r\n<p>#if SILVERLIGHT<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Encoding AE = System.Text.Encoding.Unicode;<br>#else<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ASCIIEncoding AE = new ASCIIEncoding();<br>#endif</p>\r\n<p>It would seem that these encodings don't behave the same way...! Any suggestions for a fix?</p>\r\n<p>cheers</p>\r\n<p>Alan</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-07T02:19:34.807-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "283437",
    "ThreadId": "80040",
    "Html": "<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">\r\n<p>&nbsp;</p>\r\n<p>Changing Unicode to UTF8&nbsp;works for me&nbsp;since the default csv file is all single byte UTF8. If you have a custom SRID.csv with extended UTF8 (multibyte encoding) then you would have to go further.</p>\r\n<p>SharpMap.CoordinateSystems\\IO\\CoordinateSystems\\StreamTokenizer.cs</p>\r\n<p>#if SILVERLIGHT<br>&nbsp;//Encoding AE = System.Text.Encoding.Unicode;<br>&nbsp;Encoding AE = System.Text.Encoding.UTF8;<br>#else<br>&nbsp;ASCIIEncoding AE = new ASCIIEncoding();<br>#endif</p>\r\n</span></span><span style=\"color:#0000ff;font-size:x-small\"></span></p>",
    "PostedDate": "2010-01-29T11:59:57.907-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]