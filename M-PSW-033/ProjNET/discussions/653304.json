[
  {
    "Id": "1469233",
    "ThreadId": "653304",
    "Html": "We are trying to go from NAD83 to Web Mercator (4269 to 3857) while applying a specific data transformation (NAD_1983_To_GS_1984_5)\r<br />\n<br />\nI'm using the following code:<br />\n<pre><code>        public async Task&lt;IMapPoint&gt; HandleAsync(ProjectPointToWebMercator query)\n        {\n            var gga = query.GGAData;\n\n            double[] values = new double[] { gga.Longitude, gga.Latitude, gga.Altitude };\n\n            double[] transformedValues = Wgs84LatLonToMercator(values);\n\n            var mapService = await _mediator.RequestAsync(new GetMapService());\n            var latLong = await _mediator.RequestAsync(new NewMapPoint(transformedValues[0], transformedValues[1], transformedValues[2], mapService.SpatialReference));\n\n            return latLong;\n        }\n\n        private const string sridx = &quot;GEOGCS&quot;;\n        private const string srid6318 = &quot;GEOGCS[\\&quot;GCS_NAD_1983_2011\\&quot;,DATUM[\\&quot;D_NAD_1983_2011\\&quot;,SPHEROID[\\&quot;GRS_1980\\&quot;,6378137.0,298.257222101]],PRIMEM[\\&quot;Greenwich\\&quot;,0.0],UNIT[\\&quot;Degree\\&quot;,0.0174532925199433]]&quot;;\n        private const string srid4269 = &quot;GEOGCS[\\&quot;NAD83\\&quot;,DATUM[\\&quot;North_American_Datum_1983\\&quot;,SPHEROID[\\&quot;GRS 1980\\&quot;,6378137,298.257222101,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;7019\\&quot;]],AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;6269\\&quot;]],PRIMEM[\\&quot;Greenwich\\&quot;,0,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;8901\\&quot;]],UNIT[\\&quot;degree\\&quot;,0.01745329251994328,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;9122\\&quot;]],AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;4269\\&quot;]]&quot;;\n        private const string Srid4326 = &quot;GEOGCS[\\&quot;WGS 84\\&quot;,DATUM[\\&quot;WGS_1984\\&quot;,SPHEROID[\\&quot;WGS 84\\&quot;,6378137,298.257223563,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;7030\\&quot;]],AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;6326\\&quot;]],PRIMEM[\\&quot;Greenwich\\&quot;,0,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;8901\\&quot;]],UNIT[\\&quot;degree\\&quot;,0.01745329251994328,AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;9122\\&quot;]],AUTHORITY[\\&quot;EPSG\\&quot;,\\&quot;4326\\&quot;]]&quot;;\n\n        public double[] MercatorToWgs84LatLon(double[] values)\n        {\n            var mercator = GetMercatorProjection();\n            var latlon = (IGeographicCoordinateSystem)CoordinateSystemWktReader.Parse(srid4269);\n            var ctfac = new CoordinateTransformationFactory();\n            var transformation = ctfac.CreateFromCoordinateSystems(mercator, latlon);\n            var transform = transformation;\n            var converted = transform.MathTransform.Transform(values);\n            return converted;\n        }\n\n        public double[] Wgs84LatLonToMercator(double[] values)\n        {\n            try\n            {\n                var mercator = GetMercatorProjection();\n                var latlon = (IGeographicCoordinateSystem)CreateNAD83CoordinateSystem();\n                var ctfac = new CoordinateTransformationFactory();\n                var transformation = ctfac.CreateFromCoordinateSystems(latlon, mercator);\n                var transform = transformation;\n                var converted = transform.MathTransform.Transform(values);\n                return converted;\n            }\n            catch(Exception e)\n            {\n                int i = 0;\n                i++;\n                return values;\n            }\n        }\n\n        private static IGeographicCoordinateSystem CreateNAD83CoordinateSystem()\n        {\n            CoordinateSystemFactory cFac = new CoordinateSystemFactory();\n\n            //Create Bessel 1840 geographic coordinate system\n            IEllipsoid ellipsoid = cFac.CreateFlattenedSphere(&quot;GCS_NAD_1983_2011&quot;, 6378137.0, 298.257222101, LinearUnit.Metre);\n\n            //Information for transformation - scale factor is zero.\n            Wgs84ConversionInfo info = new Wgs84ConversionInfo();\n            info.Dx = -0.991;\n            info.Dy = 1.907200;\n            info.Dz = 0.512900;\n            info.Ex = -0.025790;\n            info.Ey = -0.009650;\n            info.Ez = -0.011660;\n            info.Ppm = 0.0;\n\n            IHorizontalDatum datum = cFac.CreateHorizontalDatum(&quot;D_NAD_1983_2011&quot;, DatumType.HD_Geocentric, ellipsoid, info);\n            IGeographicCoordinateSystem gcs = cFac.CreateGeographicCoordinateSystem(&quot;GCS_NAD_1983_2011&quot;, AngularUnit.Degrees, datum,\n                PrimeMeridian.Greenwich, new AxisInfo(&quot;Lon&quot;, AxisOrientationEnum.East),\n                new AxisInfo(&quot;Lat&quot;, AxisOrientationEnum.North));\n\n            return gcs;\n        }\n\n        private static ICoordinateSystem GetMercatorProjection()\n        {\n            var factory = new CoordinateSystemFactory();\n\n            var wgs84 = factory.CreateGeographicCoordinateSystem(&quot;WGS 84&quot;,\n                AngularUnit.Degrees, HorizontalDatum.WGS84, PrimeMeridian.Greenwich,\n                new AxisInfo(&quot;north&quot;, AxisOrientationEnum.North), new\n                AxisInfo(&quot;east&quot;, AxisOrientationEnum.East));\n\n            var parameters = new List&lt;ProjectionParameter&gt;\n            {\n                new ProjectionParameter(&quot;semi_major&quot;, 6378137),\n                new ProjectionParameter(&quot;semi_minor&quot;, 6378137),\n                new ProjectionParameter(&quot;latitude_of_origin&quot;, 0.0),\n                new ProjectionParameter(&quot;central_meridian&quot;, 0.0),\n                new ProjectionParameter(&quot;scale_factor&quot;, 1.0),\n                new ProjectionParameter(&quot;false_easting&quot;, 0.0),\n                new ProjectionParameter(&quot;false_northing&quot;, 0.0)\n            };\n\n            var projection = factory.CreateProjection(&quot;Mercator&quot;, &quot;mercator_1sp&quot;, parameters);\n\n            var mercator = factory.CreateProjectedCoordinateSystem(&quot;Mercator&quot;,\n                wgs84, projection, LinearUnit.Metre,\n                new AxisInfo(&quot;East&quot;, AxisOrientationEnum.East),\n                new AxisInfo(&quot;North&quot;, AxisOrientationEnum.North));\n            return mercator;\n        }\n    }</code></pre>\n\nI am 5.91 feet off when applying the transformation and 3.01 feet off when not applying the transformation.  The values for dx, dy, dz, Ex, ey, eZ are coming from the transformation in arcmap.  They are reported as dx, dy, dz, rx, ry, rz.\r<br />\n<br />\nWhat is wrong here?  I can't find a lot of examples on how to apply a specific transformation to when projecting from one projection to another.  \r<br />\n",
    "PostedDate": "2016-04-06T15:27:31.177-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]